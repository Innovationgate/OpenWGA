import java.text.SimpleDateFormat;
import org.apache.tools.ant.filters.*

plugins {
  id 'nebula.ospackage' version '3.4.0'
}

def linuxDistros = ['lenny', 'hardy', 'lucid', 'squeeze', 'precise', 'trusty', 'wheezy', 'xenial', 'bionic']

configurations {
    server
    tomcatAdditionalJars
}

dependencies {
    server project(":server")
    
    tomcatAdditionalJars 'com.sun.mail:javax.mail:1.4.7'
    tomcatAdditionalJars 'javax.activation:activation:1.1.1'
    tomcatAdditionalJars 'org.apache.geronimo.specs:geronimo-activation_1.1_spec:1.1'
    tomcatAdditionalJars 'org.apache.geronimo.specs:geronimo-jta_1.1_spec:1.1.1'
    tomcatAdditionalJars 'org.glassfish.main.transaction:javax.transaction:3.1.2.2'
}

ext.debianQualifier = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date())
ext.changelogDate = new SimpleDateFormat("EEE, dd MMM yyyy HH:mm:ss Z").format(new Date ())

ospackage {
    packageName = "openwga${openwga_version_major}.${openwga_version_minor}-ce"
    version = "${project.version}-${debianQualifier}"
    packageGroup = 'web'
    release = '1'
    arch = 'all'
    os = LINUX
    maintainer = 'Innovation Gate GmbH <support@innovationgate.com>'
    summary = 'OpenWGA Open Source Java CMS Platform'
    packageDescription = "The OpenWGA Community Edition is a fully-featured CMS web platform for the needs of small and medium businesses, available under fair open source terms and without any fee.\
 Visit http://www.openwga.com for more details."
    license = 'GPL 2.0 with OpenWGA plugin exception'
    
    requires('adduser')
    requires('oracle-java7-jdk|openjdk-7-jdk|java7-sdk')
    conflicts('openwga')
    replaces('openwga')
    provides('openwga')

    configurationFile('/etc/openwga/server.conf.local')
    configurationFile('/etc/openwga/jmx.access')
    configurationFile('/etc/openwga/jmx.passwd')
    configurationFile('/etc/init.d/openwga')
    configurationFile('/etc/logrotate.d/openwga')
    configurationFile('/etc/openwga/tomcat/conf/catalina.policy')
    configurationFile('/etc/openwga/tomcat/conf/catalina.properties')
    configurationFile('/etc/openwga/tomcat/conf/context.xml')
    configurationFile('/etc/openwga/tomcat/conf/logging.properties')
    configurationFile('/etc/openwga/tomcat/conf/server.xml')
    configurationFile('/etc/openwga/tomcat/conf/tomcat-users.xml')
    configurationFile('/etc/openwga/tomcat/conf/web.xml')
    
    postInstall file('debianScripts/postinst')
    preUninstall file('debianScripts/prerm')
    postUninstall file('debianScripts/postrm')

    
    from('dist/all/openwga/src/etc') {
        into '/etc'
        exclude 'init.d/openwga'
    }
    from('dist/all/openwga/src/etc') {
        into '/etc'
        include 'init.d/openwga'
        fileMode 0755
    }
    from('dist/all/openwga/src/usr') {
        into '/usr'
        filter(ReplaceTokens, tokens:
            [
                'PACKAGE': ospackage.packageName,
                'VERSION': new String("${project.version}-${debianQualifier}"),
                'URGENCY': (openwga_version_patch == 0 ? 'medium' : 'critical'),
                'DATE': changelogDate,
                'COMPONENT': 'main'

            ]
        )
    }
    from('dist/all/openwga/src/var') {
        into '/var'
        exclude 'lib/openwga/tomcat/bin/*.sh'
    }
    from('dist/all/openwga/src/var') {
        into '/var'
        include 'lib/openwga/tomcat/bin/*.sh'
        fileMode 0755
    }
    from (configurations.tomcatAdditionalJars) {
        into '/var/lib/openwga/lib'
    }
    from(project(':server').tasks.war.archivePath) {
        into '/var/lib/openwga/tomcat/webapps'
        rename { String fileName ->
            'ROOT.war'
        }
    }

}

buildDeb.dependsOn configurations.server

task updateDebRepository(dependsOn: buildDeb) << {
    def debFile = buildDeb.archivePath
    println "Publishing debian package: ${debFile}"
    for (distro in linuxDistros) {
        
        /*
        println "remove ${distro} openwga${openwga_version_major}.${openwga_version_minor}-ce from ${debian_repository}"
        ant.exec(executable:"/usr/bin/reprepro"){
        	arg(line: "-Vb ${debian_repository} remove ${distro} openwga${openwga_version_major}.${openwga_version_minor}-ce")
        }
        */

        println "add ${distro} openwga${openwga_version_major}.${openwga_version_minor}-ce to ${debian_repository}"
        ant.exec(executable:"/usr/bin/reprepro"){
        	arg(line: "-C main -Vb ${debian_repository} includedeb ${distro} ${debFile}")
        }
        
    }
}
updateDebRepository.onlyIf{
    project.hasProperty('debian_repository') 
}
