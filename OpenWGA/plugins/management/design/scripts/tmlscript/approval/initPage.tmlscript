## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
try {
		//runtime.debug();
		redirectToLogin = false;
		condbkey = request.getParameter("db");
		conkey = request.getParameter("key");
		contextPath = 'db:' + condbkey + '/docid:' + conkey;
		
		if (condbkey == null || conkey == null) {
			errorMsg = "A mandatory parameter is missing: db, key";
			return;
		}
		
		/*
		// Look if content manager > 1.2.4 is installed. If so, redirect to the approval page in content manager
		var id = pluginID("de.innovationgate.contentmanager");
		if (id != null) {
			var v = id.version;
			if (v.majorVersion == 1 && v.minorVersion == 2 && v.maintenanceVersion >= 4) {
				redirectToCM = true;
			}
			if (v.majorVersion == 1 && v.minorVersion > 2) {
				redirectToCM = true;
			}
			if (v.majorVersion > 2) {
				redirectToCM = true;
			}
			
			if (redirectToCM == true) {
				return;
			}
		}
		*/
		
		// Find neccessary WGAPI objects and determine if we have to redirect to login page
		condb = db(condbkey);
		if (condb == null) {
			errorMsg = "Unknown database: " + condbkey;
			return;
		}
		
		if (!condb.isSessionOpen() || condb.getSessionContext().isAnonymous()) {
			redirectToLogin = true;
			return;
		}
		else if (condb.getSessionContext().getAccessLevel() < condb.ACCESSLEVEL_EDITOR) {
			var labelParams = createList();
			labelParams.add(condbkey);
			errorMsg = label("errLowAccessLevel", labelParams);
			return;
		}		

		con = condb.getContentByKey(conkey);
		if (con == null) {
			var labelParams = createList();
			labelParams.add(conkey);
			errorMsg = label("errUnknownDoc", labelParams);
			return;
		}
		
		// Draft doc? The doc was rejected. Redirect to CM
		if (con.status == con.STATUS_DRAFT) {
			redirectToCM = true;
			return;
		}
		
		// Only test for valid status if content was not approved/reset in this request
		if (!contentWasReset && !contentWasApproved) {
			/*
			if (con.status != con.STATUS_REVIEW) {
				var labelParams = createList();
				labelParams.add(con.title);
				if (con.status == con.STATUS_RELEASE) {
					errorMsg = label("errAlreadyReleased", labelParams);	
				}
				else {
					errorMsg = label("errWrongStatus", labelParams);
				}
				return;
			}
			
			if (con.getWorkflowRole() < Packages.de.innovationgate.webgate.api.workflow.WGWorkflow.ROLE_APPROVER) {
				redirectToLogin = true;
			}
			*/
		}
		
	}
	catch (e) {
		logException(e);
		if (e.javaException) {
			errorMsg = e.javaException.getClass().getName() + " - " + e.javaException.getMessage();
		}
		else {
			errorMsg = e.message;
		}
	}
