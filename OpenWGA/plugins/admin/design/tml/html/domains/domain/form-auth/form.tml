## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
<tml:action id="resetImplClass">
	_config_bean = DBM.getConfigBean();
    _config_bean.authenticationSource.options.clear();
</tml:action>

<tml:script>
	var types_map = DBM.getModReg().getModulesForType(Packages.de.innovationgate.wga.modules.types.AuthenticationSourceModuleType);
	var types = types_map.keySet().iterator();
	_classes = createlist();
	var match = false;
	if(DBM.getConfigBean())
		var currentValue = DBM.getConfigBean().implClassName;
	while(types.hasNext()){
		var type = types.next();
		if(currentValue==type)
			match=true; 			
		var modDef = types_map.get(type)		
		_classes.add(modDef.getTitle(DBM.locale) + "|" + type);
	}
	if(!match && currentValue)
		_classes.add(currentValue);
</tml:script>			

<tml:[system:fs-input] o_field="implClassName" o_type="select" o_options="{_classes}" o_changeaction="resetImplClass"
	o_validation="$E_VALUE!=''"
	o_message="Please select an authentication source"
/>

<tml:case condition="tmlform.field('/authenticationSource/implClassName')">
	<tml:script>
		try{
			var modDef = DBM.getModuleDefinition("AuthenticationSource", tmlform.field('/authenticationSource/implClassName'))
			if(modDef.testAvailability)
				modDef.testAvailability(DBM.getModReg())
			_hasModDef=true	
			//setOption("module-definition", modDef);
		}		
		catch(e){
			_msg = e.javaException ? e.javaException.message : e.message
		}		
	</tml:script>
	<tml:if condition="_hasModDef //option('module-definition')">
		<tml:then>
			<tml:comment><tml:[system:module-options:form] o_title="more optional parameters ...">
				<tml:option name="ns"><tml:option name="ns"/>/options</tml:option>
			</tml:[system:module-options:form]></tml:comment>
			
			<tml:portlet name="options" ref="system:module-options:portlet" ajax="true">
				<tml:option name="ns"><tml:option name="ns"/>/options</tml:option>
				<tml:option name="title">more optional parameters ...</tml:option>
				<tml:option name="modtype">AuthenticationSource</tml:option>
				<tml:option name="implClassName"><tml:item name="/authenticationSource/implClassName" type="tmlform"/></tml:option>
			</tml:portlet>

		</tml:then>
		<tml:else>
			<div class="data" style="color:red">
				<tml:item name="_msg"/>
				<br>
				<tml:input name="not-valid" type="hidden"
					validation="false"
					message="The selected authentication type is currently not available on this WGA system"
				/>
			</div>					
		</tml:else>
	</tml:if>
</tml:case>
