## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
<tml:action id="clearPersOptions">
	_config_bean = DBM.getConfigBean();
	_config_bean.personalisation.databaseOptions.clear();
	DBM.tmlform.removeFields("/personalisation/databaseOptions");
	tmlform.removeField("selectedDb");
</tml:action>

<tml:action id="createPersOptions">	
	_config_bean = DBM.getConfigBean();
	_config_bean.personalisation.databaseOptions.putAll(_dbinfolist.get(tmlform.dblist).options)
</tml:action>

<tml:action id="removePersImplClassName">
	_config_bean = DBM.getConfigBean();
	_config_bean.personalisation.implClassName = "";
	tmlform.removeField("/personalisation/implClassName");
	callAction("clearPersOptions");
</tml:action>

<tml:[system:fs-input] o_field="enabled" o_type="boolean"/>
<tml:[system:fs-input] o_field="lazyConnecting" o_type="boolean"/>

<tml:script>
	_config_bean = DBM.getConfigBean();
	_dbservers = DBM.dbservers.getServerList("personalisationDatabase", "/personalisation/dbServer");
</tml:script>

<tml:[system:fs-input] o_field="dbServer" o_type="select" o_options="{_dbservers}" o_changeaction="removePersImplClassName" o_switchto="dbservers"
	o_validation="$E_VALUE!=''"
	o_message = "Bitte w채hlen sie einen Server f체r die Personalisierung aus"
	o_mode="{_dbservers.size()==1?'view':'edit'}"
/>	

<tml:case condition="tmlform.field('/personalisation/dbServer')">
	<tml:script>			
		// get DB-Implementations List
		_implClasses = DBM.dbservers.getImplClassNameList(tmlform.field('/personalisation/dbServer'), "personalisationDatabase", "/personalisation/implClassName");
	</tml:script>

	<tml:[system:fs-input] o_field="implClassName" o_type="select" o_options="{_implClasses}" o_changeaction="clearPersOptions" 
		o_validation="$E_VALUE!=''"
		o_message = "Bitte w채hlen sie einen Datenbanktyp f체r die Personalisierung aus"
		o_mode="{_implClasses.size()==1?'view':'edit'}"
	/>
	
	<tml:case condition="tmlform.field('/personalisation/implClassName')">
	
		<tml:script>
			if(tmlform.selectedDb){
				_config_bean.personalisation.databaseOptions.putAll(_dbinfolist.get(tmlform.selectedDb).options)
			}
			var dbserver = wgacore.getDatabaseServers().get(tmlform.field('/personalisation/dbServer'));
			_isAvailableDatabasesRetrievable = dbserver.isAvailableDatabasesRetrievable(wgacore.getLibraryLoader().loadClass(tmlform.field('/personalisation/implClassName')))			
			
			var dbtype = DBM.getModuleDefinition("PersonalisationDatabase", tmlform.field('/personalisation/implClassName'))
			setOption("module-definition", dbtype);
			if (dbtype) {
				_pathOptions = dbserver.getDatabasePathOptions(dbtype.getImplementationClass());
				_hasPathOptions = !_pathOptions.isEmpty();
			}
		</tml:script>
		
		<tml:if condition="option('module-definition')">
			<tml:then>

				<tml:if condition="_isAvailableDatabasesRetrievable && (!_config_bean.personalisation.databaseOptions || _config_bean.personalisation.databaseOptions.isEmpty())">
					<tml:then>
						<tml:include ref="webprojects:project:form-db:form-select-or-create-db">
							<tml:option name="implClassName"><tml:item name="/personalisation/implClassName" type="tmlform"/></tml:option>
							<tml:option name="dbServer"><tml:item name="/personalisation/dbServer" type="tmlform"/></tml:option>
							<tml:option name="type">PersonalisationDatabase</tml:option>
						</tml:include>
					</tml:then>
					<tml:else>
						<tml:[system:module-options:form] o_title="more optional parameters">
							<tml:option name="ns">/personalisation/databaseOptions</tml:option>
							<tml:option name="changeDbAction">clearPersOptions</tml:option>
							<tml:option name="pathOptionsReadonly"><tml:item name="_isAvailableDatabasesRetrievable"/></tml:option>
							<tml:option name="pathOptions" expression="_pathOptions"/>
						</tml:[system:module-options:form]>
					</tml:else>
				</tml:if>
			</tml:then>

			<tml:else>
				<div class="data" style="color:red">The selected module is currently not installed on this server</div>					
			</tml:else>
		</tml:if>
		
	</tml:case>
	
</tml:case>

