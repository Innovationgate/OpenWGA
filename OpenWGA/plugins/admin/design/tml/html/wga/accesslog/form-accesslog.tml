## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
<tml:action id="clearAccessLog">
	callAction("clearAccessLogOptions");
	DBM.tmlform.removeFields("/accessLog/dbServer");
</tml:action>

<tml:action id="clearAccessLogOptions">
	DBM.getConfigBean().accessLog.options.clear();
	DBM.tmlform.removeFields("/accessLog/options");
</tml:action>

<tml:script>
	// retrieve accesslog modules
	var types_map = DBM.getModReg().getModulesForType(Packages.de.innovationgate.wga.modules.types.AccessLoggerModuleType); 
	var types = types_map.keySet().iterator();
	_classes = createlist();	
	_config_bean = DBM.getConfigBean();
	var match=false;
	if(_config_bean)
		var currentValue = _config_bean.implClassName;
	
	var default_value = currentValue || null;
	while(types.hasNext()){
		var type = types.next();
		default_value = type;
		if(currentValue==type)
			match=true; 
		_classes.add(types_map.get(type).getTitle(DBM.locale) + "|" + type);
	}	
	if(currentValue && !match)
		_classes.add(currentValue);

	if(_classes.size()==1)
		tmlform.setField("/accessLog/implClassName", default_value);
</tml:script>

<fieldset>
	<legend>Access Log</legend>
	
	<tml:[system:fs-input] o_ns="/accessLog" o_field="implClassName" o_type="select" o_options="{_classes}" o_changeaction="clearAccessLog"
		o_mode="{_classes.size()==1?'view':'edit'}"
	/>
	
	<tml:case condition="tmlform.field('/accessLog/implClassName')">
		<tml:script>
			var types_map = DBM.getModReg().getModulesForType(Packages.de.innovationgate.wga.modules.types.AccessLoggerModuleType);
			var accessLogManager = types_map.get(tmlform.field("/accessLog/implClassName")).getProperties();
			_pathOptions = accessLogManager.getPathOptions();
			var availableServers = accessLogManager.getAvailableDatabaseServers().iterator();
			_servers = createList();
			var default_value
			while(availableServers.hasNext()){
				var server = availableServers.next();
				_servers.add(server.getTitle(DBM.locale) + "|" + server.uid);
				default_value = server.uid;
			}
			if(_servers.size()==1)
				tmlform.setField("/accessLog/dbServer", default_value);
		</tml:script>
		
		<tml:if condition="_servers.isEmpty()">
			<tml:then>
				<label><tml:label file="wgaconfig" key="WGAConfiguration/accessLog/dbServer"/>:</label>
				<div class="data" style="color:red">
					No Servers available
				</div>
			</tml:then>
			<tml:else>
				
				<tml:[system:fs-input] o_ns="/accessLog" o_field="dbServer" o_type="select" o_options="{_servers}" o_changeaction="clearAccessLogOptions"
					o_mode="{_servers.size()==1?'view':'edit'}"
					o_validation="$E_VALUE!=''"
					o_message="Please select a database server"
					o_switchto="dbservers"
				/>
			
				<tml:case condition="tmlform.field('/accessLog/dbServer')">
					
					<tml:script>
						try{
							var moddef = DBM.getModuleDefinition("AccessLogger", tmlform.field('/accessLog/implClassName'))
							setOption("module-definition", moddef);							
						}
						catch(e){
							log.info(e.message);
						}		
					</tml:script>
					
					<tml:if condition="option('module-definition')">
						<tml:then>
							<tml:if condition="_config_bean.accessLog.options.isEmpty()">
								<tml:then>
									<tml:case condition="tmlform.mode()=='edit'">
										<tml:include ref="::form-select-or-create-accesslog-db">
											<tml:option name="implClassName"><tml:item name="/accessLog/implClassName" type="tmlform"/></tml:option>
											<tml:option name="dbServer"><tml:item name="/accessLog/dbServer" type="tmlform"/></tml:option>
										</tml:include>
									</tml:case>
								</tml:then>
								<tml:else>
									<tml:[system:module-options:form] o_title="Optional Parameters">
										<tml:option name="ns">/accessLog/options</tml:option>
										<tml:option name="changeDbAction">clearAccessLogOptions</tml:option>
										<tml:option name="pathOptionsReadonly">true</tml:option>
										<tml:option name="pathOptions" expression="_pathOptions"/>
									</tml:[system:module-options:form]>
								</tml:else>
							</tml:if>
						</tml:then>
			
						<tml:else>
							<div class="data" style="color:red">The selected module is currently not installed on this server</div>					
						</tml:else>
					</tml:if>		
			
				</tml:case>
					
			</tml:else>
		</tml:if>
	
	</tml:case>
	
</fieldset>
