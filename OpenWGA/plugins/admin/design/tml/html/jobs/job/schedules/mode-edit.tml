## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
<tml:action id="saveSchedule">
	//runtime.debug();
	if(!tmlform.validate())
		return;
		
	try{
		var config = DBM.wgaconfig.clone();
		var schedule = DBM.wgaconfig.getByUid(portlet.getSessionVar('key'))
		
		switch(tmlform.executeOnEach){
			case "each":
				tmlform.setField("/type", "cron");
				tmlform.setField("/data", createObject("cron").createCronExpression());
				break;
			case "every":
				tmlform.setField("/type", "simple");
				tmlform.setField("/data", tmlform.every_time+tmlform.subMode_every);
				break;
			case "cron":
				tmlform.setField("/type", "cron");
				break;
		}
		DBM.tmlform.setConfigProperties(schedule);

		_errors = config.validate()
		if(_errors.isEmpty()){
			DBM.wgaconfig.save();
			
			portlet.fireEvent(createEvent("wga-config-changed"));
			portlet.setMode("view");
			
			tmlform.processContext.kill()			
		}
		else {
			log.info(_errors);
		}
	}
	catch(e){
		log.info(e);
		logException(e)
	}
</tml:action>

<tml:action id="deleteSchedule">
	try{
		var config = DBM.wgaconfig.clone();
		var schedule = DBM.wgaconfig.getByUid(portlet.getSessionVar('key'))
		var job = DBM.wgaconfig.getByUid(option("jobuid"))
		
		job.schedules.remove(schedule)

		_errors = config.validate()
		if(_errors.isEmpty()){
			DBM.wgaconfig.save();
			
			portlet.fireEvent(createEvent("wga-config-changed"));
			portlet.setMode("view");
		}
		else log.info(_errors);
	}
	catch(e){
		log.info(e);
		logException(e)
	}
</tml:action>

<tml:form id="edit-schedule-form" source="none" mode="edit" htmlinput="ignore">
	<script>
		DBM.actions.save("<tml:script expression="portlet.portletkey"/>").setAction("<tml:action ref="saveSchedule"/>");
	</script>
		
	<tml:include designdb="@ui" ref="windowview">
	
		<tml:option name="config" scope="local">
			tbar: [
				{
					cls:'x-btn-text-icon',						
					icon: '<tml:url type="file" db="@afw" doc="icons" file="page_delete.png"/>',		                
					text: "<tml:label key="btn.delete"/>",
					handler: function(){
						WGA.ajax.callAction("<tml:action>_querydeleteschedule=true</tml:action>","<tml:script expression="portlet.portletkey"/>");
					}
				}
			]
			
			,buttonAlign: "left"
			,buttons: [<tml:[system:edit-action-buttons]/>]
		</tml:option>
	
		<tml:option name="title">
			Edit Schedule
		</tml:option>
	
		<tml:inline name="body">
		
			<tml:include ref="system:config-errors"/>

			<tml:case istrue="_querydeleteschedule">
				<tml:include designdb="@ui" ref="message">
					<tml:option name="title">Delete this Schedule?</tml:option>
					<tml:option name="body">
						Are you sure?
						<div>
							<tml:button clickaction="deleteSchedule" ajax="true">OK</tml:button>									
							<tml:button clickaction="$refresh" ajax="true">Cancel</tml:button>
						</div>
					</tml:option>
				</tml:include>
			</tml:case>		
		
			<tml:include designdb="@ui" ref="formmessages"/>
			<tml:script>
				if(!tmlform.submitted)
					createObject("cron").fillForms(_config_bean.data, _config_bean.type);
			</tml:script>
			<tml:include ref="::form"/>

		</tml:inline>
		
	</tml:include>
	
</tml:form>
