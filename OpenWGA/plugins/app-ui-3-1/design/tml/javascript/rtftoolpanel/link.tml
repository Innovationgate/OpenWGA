## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
/*
 * Link tab
 */
var link_toolbar = new Ext.Toolbar({
	renderTo: "rtf-toolbar-link",
	items: [
		{
			cmd: "InsertLink",
			text: "<tml:label key="rtf.change-or-create"/>",
			cls: "x-btn-text-icon",
			tooltip: "<tml:label key="rtf.link.change-or-create"/>",
			icon: "<tml:url db="@afw" type="file" doc="icons" file="link.png"/>",
			handler: function(button, ev){
				Ext.ux.RTF.toolbar.showLinkDialog(button, ev);					
			}
		}
	]
});

var selectedLink;
addUpdateListener(function(){
	// check for links
	var atag = editor.getNearestTagFromSelection("a");
	if(atag && atag.href){
		selectedLink = atag;
		var linktype = AFW.RTF.getURLInfo(atag).type 
		Ext.get("rtf-link-type").update('<a href="#">' + {
			exturl: "<tml:label key="rtf.link.source.exturl"/>",
			int: "<tml:label key="rtf.link.source.int"/>",
			intfile: "<tml:label key="rtf.link.source.intfile"/>",
			intname: "<tml:label key="rtf.link.source.intname"/>",
			file: "<tml:label key="rtf.link.source.file"/>"						
		}[linktype||"exturl"] + '</a>');
		Ext.get("rtf-link-type").on("click", function(ev){
			Ext.ux.RTF.toolbar.showLinkDialog(null, WGA.isIE?{target:null}:ev);
		})
		
		var url=atag.href;
		if(linktype=="exturl")
			url = AFW.RTF.getURLInfo(atag).key || url;
		var e = new RegExp("<tml:meta type="request" name="absolutewgaurl"/>/<tml:meta name="dbkey" type="database"/>/html/default/");
		Ext.get("rtf-link-input-url").dom.value=url.replace(e, "");
		Ext.get("rtf-link-input-target").dom.value=atag.target;
		Ext.get("rtf-link-input-title").dom.value=atag.title;
		link_actionbutton.enable();
		if(linktype=="exturl")
			Ext.get("rtf-link-input-url-wraper").setStyle("display", "block");
		else Ext.get("rtf-link-input-url-wraper").setStyle("display", "none")
	}
	else {
		selectedLink = null;
		link_actionbutton.disable();
		Ext.get("rtf-link-input-url-wraper").setStyle("display", "none");
		Ext.get("rtf-link-type").update("<tml:label key="rtf.link.none-selected"/>");
		Ext.get("rtf-link-input-url").dom.value="";
		Ext.get("rtf-link-input-target").dom.value="";
		Ext.get("rtf-link-input-title").dom.value="";					
	}

	updateButtons(link_toolbar)	
});

/* setup key event handlers */

var link_target_el = Ext.get("rtf-link-input-target");
var link_title_el = Ext.get("rtf-link-input-title");

link_title_el.on("keyup", function(event, el){
	if(selectedLink){
		function recalc(){
			selectedLink.title = link_title_el.dom.value;
		}
		recalc.defer(500)
	}
});

link_target_el.on("keyup", function(event, el){
	if(selectedLink){
		function recalc(){
			selectedLink.target = link_target_el.dom.value;
		}
		recalc.defer(500)
	}
});
