<tml:eventscript onevent="modules-duplicated">
	var mod = portletEvent.getParameter("mod");
	copyFields(mod)
	
	function copyFields(mod){
		var duplicated_from = mod.get("duplicated_from");
		var id = mod.get("id");
		if(!duplicated_from)
			return;
		for(let fieldname in Iterator(tmlform.fieldnames)){
			if(fieldname.indexOf(duplicated_from)>=0){
				var base = fieldname.split(duplicated_from)[0];
				tmlform.setField(base+id, tmlform.fieldList(fieldname));
			}
		}
		var children = mod.get("children");
		for(let child in Iterator(children))
			copyFields(child);
	}
</tml:eventscript>

<tml:action id="refresh">
	var fields = tmlform.getfieldnames().iterator()
	while(fields.hasNext()){
		var field = fields.next();
		tmlform.setField(field, tmlform.fieldList(field));
	}
</tml:action>

<tml:input name="designdb" type="hidden" store="false"/>
<tml:input name="settingstml" type="hidden" store="false"/>
<tml:input name="title" type="hidden" store="false"/>

<tml:input name="mod_title" type="hidden" store="false"/>
<tml:input name="module_id" type="hidden" store="false"/>
<tml:input name="mod_id" type="hidden" store="false"/>
<tml:input name="parent_mod_id" type="hidden" store="false"/>
<tml:input name="ids_to_duplicate" type="hidden" store="false"/>
<tml:input name="modules" type="hidden" store="false"/>

<script>
	require(["jquery", "content-modules", "jquery-textarea-autogrow"], function($, M){ 
		WGA.event.addListener("<tml:script expression="portlet.portletkey"/>", "content-module-selected", function(ev){
			var form = document.forms["<tml:script expression="tmlform.formid"/>"];
			var module = ev.params.module;
			var config = ev.params.config;
	
			if(config){
				form.designdb.value = config.designdb;
				form.settingstml.value = config.settingstml||"";
				form.title.value=(config.category ? "[" +config.category + "] ": "") + config.title;
				form.module_id.value = config.id;
			}
			else if(module.level==1){
				form.title.value="Bereich '" + module.title + "'";
				form.settingstml.value = "root";
				var section = module.id.split(".")[1];
				var mods = M.getModules();
				form.modules.value = JSON.stringify(mods[section]);
			}
			else {
				form.title.value=module.context;
				form.settingstml.value = "error";
			}
	
			if(module){
				form.mod_id.value=module.id;
			}
	
			WGA.ajax.callAction("<tml:action ref="refresh"/>");
		})
		
		$("#<tml:script expression="tmlform.formid"/> input[type=text],input[type=number],input[type=password],textarea").addClass("form-control");
		$("#<tml:script expression="tmlform.formid"/> textarea").autogrow()
	})
</script>

<tml:case condition="tmlform.title">

	<script>
		require(["jquery"], function($){
			$("#dialog-content-modules .header .module").html("<tml:item name="title" type="tmlform"/>")
		})
	</script>

	<tml:if condition="tmlform.settingstml=='error'">
	
		<tml:then>
			<div class="alert alert-danger">
				<h4>Dieses Modul ist nicht (mehr) verfügbar.</h4>
				<p>Bitte wenden Sie sich an Ihren Administrator oder löschen Sie dieses Modul.</p>
			</div>
			<button class="btn btn-default" data-button="delete" title="Modul löschen">
				<i class="far fa-trash-alt"></i>
				Modul löschen
			</button>
		</tml:then>
	
		<tml:elseif condition="tmlform.settingstml=='root'">
			<tml:script>
				_mods = JSON.parse(tmlform.modules)
			</tml:script>
			<tml:{div} html_class="outline" if="_mods.length">
				<tml:include designdb="@cmm" ref="system:include-child-outlines" o-modules="_mods"/>
				<script>
					require(["jquery", "content-modules"], function($, M){
						$("#dialog-content-modules .outline a").click(function(ev){
							ev.preventDefault();
							M.selectNode($(this).data("id"));
						})
					})
				</script>
			</tml:{div}>
			<tml:{div} unless="_mods.length">
				- keine Inhaltsmodule -
			</tml:{div}>
		</tml:elseif>
		
		<tml:else>
			<tml:script>
				var parts = tmlform.settingstml.split("/");	
				if(parts.length>1){
					_designdb = parts[0];
					_tml = parts[1];
				}
				else{
					_tml = tmlform.settingstml
					_designdb = tmlform.designdb;
				} 
				// calculate edit mode:
				if(tmlform.field("setting_source_"+tmlform.mod_id)=="template")
					_mode = "view";
				else _mode = option("mode");
				
				/*
				_classes = WGA.createList()
				if(tmlform.module_id){
					_classes.addAll(CMM.getModuleCssClasses(tmlform.module_id))
				}
				*/
				_classes = null;
				if(tmlform.module_id){
					_classes=CMM.getModuleCssClasses(tmlform.module_id)
				}
				_hasClasses = $option_mode=="view" ? tmlform.fieldlist(WGA.scoped('module_css_classes', tmlform.mod_id)).size() 
					: _classes && (_classes.classes.size() || _classes.options.size())
				
				_styles = {
					included: false
				}
			</tml:script>
	
			<div>
				<tml:range labellanguage="de">
				
					<tml:option name="cmm_styles" if="_hasClasses">
						<div style="display:flex">
							<tml:case condition="_classes.classes.size()">
								<div style="flex:1">
									<tml:input labeled="true" name="{WGA.scoped('module_css_classes', tmlform.mod_id)}" type="checkbox" optionsitem="_classes.classes" mode="{option:mode}"/>
								</div>
							</tml:case>
							<div style="flex:1">
								<tml:foreach item="_classes.options" currentvalue="_option">							
									<div style="margin:5px 0">
										<label><tml:item name="_option.label"/></label>
										<div>
											<tml:input cssclass="form-control" name="{WGA.scoped('module_css_classes', tmlform.mod_id)}" type="select" optionsitem="_option.values" mode="{option:mode}"/>
										</div>
									</div>
								</tml:foreach>
							</div>
						</div>
					</tml:option>
				
					<tml:include designdb="{_designdb}" ref="{_tml}" o_ns="{tmlform.mod_id}" tmlscope="{tmlform.mod_id}" if="_tml" o-module_styles="_styles">
						<tml:option name="parent-scope" expression="tmlform.parent_mod_id"/>
						<tml:option name="cm_dbkey" expression="context('main').meta('db', 'dbkey')"/>
					</tml:include>

					<tml:case unless="_styles.included" if="_hasClasses">
						<label>Stil</label>
						<div style="margin:10px;padding:10px;background:#eee;border:solid #ccc 1px;border-radius:4px">
							<tml:option name="cmm_styles"/>
						</div>
					</tml:case>
					
					<tml:case condition="!_hasClasses && !_tml">
						Dieses Modul besitzt keine Einstellungsmöglichkeiten.
					</tml:case>
				</tml:range>
			</div>
		
		</tml:else>
	</tml:if>

</tml:case>