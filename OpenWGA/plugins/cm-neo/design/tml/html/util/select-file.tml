<tml:action id="refresh">
	var ev = createevent("file-selected")
	ev.addParameter("field", tmlparam1)
	portlet.fireevent(ev)
</tml:action>

<tml:script>
	_fieldname = WGA.scoped(option("fieldname")||"image");
</tml:script>

<tml:script>
	var derivate = option("derivate");
	var extensions=option("file-extensions");
	var mimetype=option("mimetype");
	var filenames = content().getFileNames();

	if(derivate || extensions || mimetype){
		_filenames = WGA.createList();
		if(derivate && db().hasFeature(db().FEATURE_CONTENT_FILE_DERIVATES)){
			for(var filename in Iterator(filenames)){
				if(WGA.selectDerivate(filename, derivate))
					_filenames.add(filename);
			}
		}
		if(mimetype){
			for(var filename in Iterator(filenames)){
				var file_md = content().getFileMetaData(filename);
				if(file_md.mimeType.indexOf(mimetype)==0 && !_filenames.contains(filename))
					_filenames.add(filename);
			}
		}
		if(extensions){
			extensions += ",";
			for(var filename in Iterator(filenames)){
				var ext = filename.split(".").pop().toLowerCase() + ",";
				if(extensions.indexOf(ext)>=0 && !_filenames.contains(filename))
					_filenames.add(filename);
			}
		}
	}
	else _filenames = filenames;	// take it all
	_filenames = WGA.sortList(_filenames);
	_filenames.add(0, "");
</tml:script>

<div style="margin:10px">
	<tml:input name="{_fieldname}" type="select" optionsitem="_filenames" mode="{option:mode}" cssstyle="width:100%"/>
	<div style="margin:10px 0" class="fileinfo clearfix" style="display:none" id="select-file-<tml:item name="_fieldname"/>">
		<div style="float:left;width:60px;margin-top:5px" class="image"></div>
		<div style="margin-left:70px" class="metas"></div>
	</div>
</div>
<script>
	require(["select2"], function(Select2){
		var urls={
			<tml:foreach item="_filenames" currentvalue="_image" filter="_image!=''">
				<tml:script>
					_url = AFW.content().attachment(_image).getThumbnailURL()
					var file = content().getFileMetaData(_image);
					_size = file.getSize();
					_date = file.getLastmodified()
					_mimetype = file.getMimeType()					
				</tml:script>
				"<tml:item name="_image"/>": {
					"url": "<tml:item name="_url"/>",
					"date": "<tml:item name="_date"/>",
					"mimetype": "<tml:item name="_mimetype"/>",
					"size": '<tml:script expression="AFW.Util.renderFileSize(_size)"/>'
				}<tml:between>,</tml:between>
			</tml:foreach>
		}
		function showFileinfo(id){
			var data = urls[id];
			var el = $("#select-file-<tml:item name="_fieldname"/>");
			el.find(".image").html('<img style="max-width:60px;max-height:40px" src="' + data.url + '">');
			el.find(".metas").html(data.mimetype + " - " + data.size
				+ "<br>"
				+ data.date
			)
			el.show();
		}
		<tml:case condition="tmlform.field(_fieldname)">
			showFileinfo("<tml:item name="{_fieldname}" type="tmlform"/>")
		</tml:case>
		function format(state) {
			//console.log("state", state);
			if (!state.id || state.id=="-")
				return state.text;
			return $('<div class="select2-img clearfix"><img src="' + urls[state.id].url + '"><div class="title">' + state.text + '</div>');
		}
		$("#<tml:script expression="tmlform.formid"/> select[name=<tml:item name="_fieldname"/>]").select2({
			placeholder: "<tml:script expression="option('placeholder') || option('empty-text') || label('none')"/>",
			allowClear: true,
			templateResult: format,
			//templateSelection: format
		}).on("select2:select", function(ev){
			//console.log("change", this, ev.params.data);
			showFileinfo(ev.params.data.id);
		}).on("select2:unselect", function(ev){
			//console.log("unselect", this, ev.params.data);
			$(this).nextAll(".fileinfo").hide();	
		})
	})
</script>
