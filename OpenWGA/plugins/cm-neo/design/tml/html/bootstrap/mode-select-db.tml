<tml:script>

    var Request = AFW.request();
    
	if(!Request.isIE && !Request.isGecko && !Request.isSafari){
		_browser_not_supported = Request.userAgent;
		return;
	}

	var wgaconfig = WGA.Core.getWgaConfiguration()
	var vhost_filter = Packages.de.innovationgate.wgpublisher.filter.WGAVirtualHostingFilter;
	var vHost = vhost_filter.findMatchingHost(wgaconfig, request);

	if(!portlet.dbkey){
		var allowedDbKeys = WGA.createList()
		var dbkeys = WGA.Server.appKeys;		
		for(let dbkey in Iterator(dbkeys)){
			if(dbkey.indexOf("plugin-")==0)
				continue;	// ignore plugins

			var Database = AFW.database(dbkey);
			if(!Database.isValid() || !Database.isAuthoringAllowed())
				continue;
			
			if(vHost && !vhost_filter.isDBKeyAllowed(wgaconfig, vHost, dbkey))
				continue;
	
			allowedDbKeys.add(dbkey);
		}
		if(allowedDbKeys.size()==0){
			setOption("no_websites_available", true);
		}
		else if(allowedDbKeys.size()==1){
			portlet.dbkey = allowedDbKeys.get(0);
			setOption("dbkey_auto_selected", true);
		}
	}

	if(portlet.dbkey){
	
		// check v-host
		if(vHost && !vhost_filter.isDBKeyAllowed(wgaconfig, vHost, portlet.dbkey)){
			_msg = "Website '" + portlet.dbkey + "' ist für über den Host '" + vHost.servername + "' nicht erreichbar."
			return;
		}
	
		var App = WGA.app(portlet.dbkey);
		_Database = AFW.database(portlet.dbkey);
		if(!_Database.isValid()){
			_msg = "Website '" + portlet.dbkey + "' konnte nicht gefunden werden. Bitte geben Sie den Namen (Schlüssel) der Website ein, die Sie bearbeiten möchten."
			return;
		}
		else if(!_Database.isAuthoringAllowed()){
			_msg = "Diese Website ist nicht zur Bearbeitung im Content Manager vorgesehen."
			return;
		}
	}
</tml:script>

<tml:if isdefined="_browser_not_supported">

	<tml:then>
		Browser not supported: <tml:item name="_browser_not_supported"/>
	</tml:then>

	<tml:elseif condition="!_Database || !_Database.isValid() || !_Database.isAuthoringAllowed()">
		<tml:include ref="::select-db" o_msg="{_msg}"/>
	</tml:elseif>
	
	<tml:elseif condition="!_Database.isAuthor()">
		<tml:include ref="::login" o_msg="{_msg}"/>
	</tml:elseif>

	<tml:else>
		<tml:include ref="mod-contentstore"/>
	</tml:else>

</tml:if>
