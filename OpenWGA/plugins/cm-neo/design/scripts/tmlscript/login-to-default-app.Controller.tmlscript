function Controller() {}

Controller.prototype.prepare = function() {
	if(this.defaultDbKey()){
		var app = WGA.app(this.defaultDbKey())
		if(app && app.isAuthor()){
			WGA.redirectTo(WGA.Server.getBaseURL() + "/contentmanager?dbkey=" + this.defaultDbKey())
		}
	}
}.nonIsolated()

Controller.prototype.defaultDbKey = function() {
	var wgaconfig = WGA.Core.getWgaConfiguration()
	var vhost_filter = Packages.de.innovationgate.wgpublisher.filter.WGAVirtualHostingFilter;
	var vhost = vhost_filter.findMatchingHost(wgaconfig, WGA.request);
	return vhost && vhost_filter.getDefaultDBKey(WGA.Core, vhost)
}

Controller.prototype.hasDefaultDbKey = function() {
	return this.defaultDbKey()!=null
}

Controller.prototype.pwdSelfserviceURL = function(){
	return this.hasDefaultDbKey() && WGA.app(this.defaultDbKey()).domain().getPwdSelfserviceURL();
}

Controller.prototype.hasMessages = function($form) {
	return $form.hasmessages()
}

Controller.prototype.cmlogin = function($form) {
	if(!$form.validate())
		return;
	var dbkey = this.defaultDbKey() || $form.dbkey;
	var app = dbkey && WGA.app(dbkey)
	if(!app)
		return $form.addMessage("Website '" + dbkey + "' konnte nicht gefunden werden")
	var domain = app.domain();
	if(!domain.auth().login($form.username, $form.password)){
		// is logon blocked?
		if(WGA.Core.getBruteForceLoginBlocker().isLoginBlocked(domain.name, $form.username))
			return $form.addmessage("Der Benutzername '" + $form.username + "' wurde aufgrund wiederholter erfolgloser Anmeldeversuche gesperrt. Bitte wenden Sie sich an Ihren Administrator.")
		else return $form.addMessage("Anmeldefehler. Bitte pr√ºfen Sie Benutzername und Kennwort")
	}
	if(!app.isAuthor())
		return $form.addMessage("Benutzer '" + $form.username + "' ist kein Autor der Website")
	// finaly:
	WGA.redirectTo(WGA.Server.getBaseURL() + "/contentmanager?dbkey=" + dbkey)
}.nonIsolated()
