## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################

<tml:action master="true">

	// must be a master action because user may have no right to "move pages".

	var dbkey = tmlparam1;
	var sdoc = tmlparam2;
	var username = tmlparam3;

	var Database = AFW.database(dbkey);		// this open a new db session
	var trasharea = Database.getTrashArea();

	sdoc.writeExtensionData("deletedBy", username);
	sdoc.writeExtensionData("deletedFrom", sdoc.getParentNode().getNodeKey());
	Database.WGObject.moveStructEntry(sdoc, trasharea);

	removeName(sdoc);

	// check fur unique names an remove them
	function removeName(struct){
		var uname = struct.getUniqueName() 
		if(uname){
			struct.setUniqueName(null);
			struct.save();
			log.info("removed unique name '" + uname + "' form structentry " + struct.getStructKey());
		}
		var docs = struct.getAllReleasedContent().values().iterator();
		while(docs.hasNext()){
			var doc = docs.next();
			uname = doc.getUniqueName();
			if(uname){
				doc.setUniqueName(null);
				doc.save();
				log.info("removed unique name '" + uname + "' form conent " + doc.getContentKey());
			}
		}
		var children = struct.getChildEntries().iterator();
		while(children.hasNext())
			removeName(children.next())
	}

</tml:action>