## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
<tml:action id="createContentType">
	// check for valid name:	
	var check = /[^a-zA-Z0-9_\.\-\:\$]/g	
	if(check.test(tmlform.name)){
		tmlform.addMessage(label("design.name-not-valid"));
		tmlform.validate();
		return;
	}
	
	if(!tmlform.validate())
		return;
			
	try{
		var doc=db(option('dbkey')).createContentType(tmlform.name);
		switch(tmlform.positioning){
			case "fixParentDocs":
				tmlform.allowedpositions=createlist(tmlform.ap_parents.split(","))
				break;
			case "fixDocTypes":
				tmlform.allowedpositions=createlist(tmlform.ap_contenttypes.split(","))
				break;
		}
		tmlform.eventsavecontent = "tmlscript/"+tmlform.ui_savecontent;
		tmlform.eventworkflowmail = "tmlscript/"+tmlform.ui_workflowmail;
		tmlform.eventcreatecontent = "tmlscript/"+tmlform.ui_createcontent;

		// remove all fields that are defined by schema.xml
		if(doc.isMetaDeterminedInSchema){
			var fields = tmlform.fieldnames.iterator()
			while(fields.hasNext()){
				var field = fields.next();
				if(doc.isMetaDeterminedInSchema(field))
					tmlform.removefield(field)
			}
		}

		// save inner/outer layout:
		var Database=AFW.database(option('dbkey'));
		doc.setOuterLayoutName(Database.TMLName.fromDisplayName(tmlform.outerlayout));
		doc.setInnerLayoutName(Database.TMLName.fromDisplayName(tmlform.innerlayout));
		
		tmlform.storeInDocument(doc)
		
		_new_mode="view";
		_new_id=tmlform.name;
	}
	catch(e){
		log.info(e);
		tmlform.addmessage(e.message);
	}
</tml:action>

<tml:form id="contenttype-form" cssclass="entryform" source="none" onsubmit="return false">
	
	<tml:include ref="::form"/>
	<script>
		// submit function called from dialog handler and on RETURN
		BI.design.contenttype_panel.submit=function(close){
			WGA.ajax.callAction("<tml:action ref="createContentType"/>", 
				"<tml:script>return portlet.portletkey</tml:script>");
		}		
		BI.makeTextareasResizable("ct-panel");
		BI.makeComboBoxes("form-contenttype");
		
	</script>

</tml:form>
