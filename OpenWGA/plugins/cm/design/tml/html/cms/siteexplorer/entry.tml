## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
<tml:script>
	// calculate access rights
	_Database = createObject(pluginDBKey("de.innovationgate.wga-app-framework")+"/database", document.getDatabase())
	_Struct = createObject(pluginDBKey("de.innovationgate.wga-app-framework")+"/structentry", document)
	_Area = AFW.area(document.getArea());	
	_mayEditEntryAndContent = _Struct.mayEditContent();
	_mayEditChildren = _Struct.mayCreatePage();
	
	_features=request.getParameter("features");
	
	_hasChildren = false;

	var it=document.getChildEntries().iterator();
	while(it.hasNext()){
		var struct = it.next()
		if(AFW.structentry(struct).isVisible()){
			_hasChildren=true;
			break;		
		}
	}

	var currentContextPath = request.getSession().getAttribute("CM.currentContextPath");
	var currentContext=context(currentContextPath);
	
	if(currentContext.STRUCTKEY==document.getStructKey())
		_bestContent = currentContext.content();
	else {
		var langChooser = new Packages.de.innovationgate.wgpublisher.lang.WebTMLLanguageChooser(document.getDatabase(), currentContext);
		_bestContent = langChooser.selectContentForPage(document, true)
	}				
	//console.log("_bestContent", _bestContent && _bestContent.title + ", " + _bestContent.getLanguage().getName())
</tml:script>


<div class="treeentry" style="padding-left:<tml:script>return 16*(document.getLevel()-1)</tml:script>px">

	<table cellpadding="0" cellspacing="0" border="0">
		<tr>
			<td width="1%" class="twisty<tml:case istrue="_hasChildren"> collapsed</tml:case>">
				&nbsp;
			</td>
			<tml:script>
				_class = _mayEditEntryAndContent ? "title" : "title-no-edit";

				_status = (_bestContent ? _bestContent.getStatus() : "");
				if(_status=="g" && _bestContent.isPendingRelease()){
					_status = "pending";
					_valid_from = _bestContent.getValidFrom();
				}

				if(_status=="p"){				
					if(!_bestContent.isVisibleNow() && !_Area.isSystemArea())
						_class += " not-visible";
				}
				else{
					var published = document.getReleasedContent(_Database.getPreferedLanguage())
					if(!published || (!published.isVisibleNow() && !_Area.isSystemArea()))
						_class += " not-visible";
				}
				
				if(_Struct.contentHasReaders() || (db().isPageReadersEnabled() && document.getReaders().size()))
					_class += " content-has-readers";
				
				_struct_wf = document.getMetaData(document.META_WORKFLOW_NAME);
				
				_preferendLanguage = document.getDatabase().getLanguage(_Database.getPreferedLanguage())
				
			</tml:script>
			<td class="entrytitle <tml:item name="_class"/>">
				<tml:script encode="html">
					var title = _Struct.getContentTitle();
					if(_bestContent)
						title = _bestContent.title;
					if(_bestContent && _bestContent.isHiddenFrom().contains(_bestContent.DISPLAYTYPE_NAVIGATOR))
						return "("+title+")"
					else return title;
				</tml:script>
				<tml:case condition="_struct_wf">
					<span style="float:right">
						<tml:img db="@afw" doc="icons" file="eye.png">
							title="Workflow: <tml:item name="_struct_wf"/>"
						</tml:img>
					</span>
				</tml:case>
			</td>
			<td width="16">

				<tml:if condition="_Struct.getAllContent(_Database.getPreferedLanguage(), false).isEmpty()">
					<tml:then>
						<tml:if condition="_Struct.mayCreateContent() && document.mayCreateContent(_preferendLanguage)">
							<tml:then>
								<tml:img db="{pluginDBKey('de.innovationgate.wga-app-framework')}" doc="icons" file="bullet_red.png">
									ext:width="250"
									ext:qtitle="<tml:label key="se.create-content"/>"
									ext:qtip="<tml:label key="se.no-content-in-language" param1="{_Database.getPreferedLanguage()}"/>"
									id="createcontent:<tml:script>return document.getStructKey()</tml:script>"
								</tml:img>
								<script>
									var el=Ext.get("createcontent:<tml:script>return document.getStructKey()</tml:script>");
									el.mon("click", function(ev){
										BI.dialog.show("create-content", this, {
											structkey:"<tml:script expression="document.getStructKey()"/>"
										});
										ev.stopEvent();
									}, el);
								</script>
							</tml:then>
							<tml:else>
								<tml:img db="{pluginDBKey('de.innovationgate.wga-app-framework')}" doc="icons" file="bullet_red.png"/>
							</tml:else>
						</tml:if>
					</tml:then>
					<tml:else>
						<tml:select switch="_status">
							<tml:case value="w">
								<tml:img db="{pluginDBKey('de.innovationgate.wga-app-framework')}" doc="icons" file="bullet_wrench.png"/>
							</tml:case>
			
							<tml:case value="g">
								<tml:img db="{pluginDBKey('de.innovationgate.wga-app-framework')}" doc="icons" file="bullet_error.png"/>
							</tml:case>				
			
							<tml:case value="pending">
								<tml:img db="{pluginDBKey('de.innovationgate.wga-app-framework')}" doc="icons" file="date.png">
									width="12"
									title="<tml:item name="_valid_from"/>"
								</tml:img>
							</tml:case>
						</tml:select>
					</tml:else>
				</tml:if>
			</td>
			<td width="16">
				<tml:script>
					var username = _Database.getUserName();
					var struct = _Struct.WGObject;
					var deletedBy = struct.getExtensionData("deletedBy");
					if(deletedBy && (deletedBy==username || _Database.isManager())){
						_deletedFrom = struct.getExtensionData("deletedFrom");
						var obj = _Database.WGObject.getDocumentByKey(_deletedFrom);
						if(obj.getType()==struct.TYPE_AREA)
							_deletedFromTitle = "Area " + obj.getName();
						else if(obj.getType()==struct.TYPE_STRUCTENTRY)
							_deletedFromTitle = AFW.structentry(obj).getContentTitle(true)
						else _deletedFromTitle = "? " + _deletedFrom
					}
				</tml:script>
				<tml:if condition="_deletedFrom">
					<tml:then>
						<tml:img db="@afw" doc="icons" file="bullet_go.png">
							ext:width="250"
							ext:qtitle="<tml:label key="se.restore-deleted-struct"/>"
							ext:qtip="<tml:label encode="html" key="se.restore-deleted-struct.details" param1="{_deletedFromTitle}"/>"
							id="restore-struct:<tml:script>return document.getStructKey()</tml:script>"
						</tml:img>
						<script>
							var el=Ext.get("restore-struct:<tml:script>return document.getStructKey()</tml:script>");
							el.mon("click", function(ev){
								BI.dialog.show("restore-deleted-page", this, {structkey:"<tml:script expression="document.getStructKey()"/>", restoreto:"<tml:script expression="_deletedFrom"/>"});
								ev.stopEvent();
							}, el);
						</script>						
					</tml:then>
					<tml:elseif condition="_Struct.mayCreatePage() && _features.indexOf('create')>=0">
						<tml:img db="{pluginDBKey('de.innovationgate.wga-app-framework')}" doc="icons" file="bullet_toggle_plus.png">
							ext:width="250"
							ext:qtitle="{%label:se.create-childpage%}"
							ext:qtip="<tml:label encode="html" key="se.create-childpage-below" param1="{_Struct.getContentTitle(true)}"/>"
							id="createchild:<tml:script>return document.getStructKey()</tml:script>"
						</tml:img>
						<script>
							var el=Ext.get("createchild:<tml:script>return document.getStructKey()</tml:script>");
							el.mon("click", function(ev){
								BI.dialog.show("create-page", this, {parentkey:"<tml:script>return document.getStructKey()</tml:script>"});
								ev.stopEvent();
							}, el);
						</script>
					</tml:elseif>
				</tml:if>
			
				<tml:comment><tml:case condition="_Struct.mayCreatePage() && _features.indexOf('create')>=0">
					<tml:img db="{pluginDBKey('de.innovationgate.wga-app-framework')}" doc="icons" file="bullet_toggle_plus.png">
						ext:width="250"
						ext:qtitle="{%label:se.create-childpage%}"
						ext:qtip="<tml:label encode="html" key="se.create-childpage-below" param1="{_Struct.getContentTitle(true)}"/>"
						id="createchild:<tml:script>return document.getStructKey()</tml:script>"
					</tml:img>
					<script>
						var el=Ext.get("createchild:<tml:script>return document.getStructKey()</tml:script>");
						el.mon("click", function(ev){
							BI.dialog.show("create-page", this, {parentkey:"<tml:script>return document.getStructKey()</tml:script>"});
							ev.stopEvent();
						}, el);
					</script>
				</tml:case></tml:comment>				
			</td>				
		</tr>
	</table>

</div>

<script>
	var structkey="<tml:script>return document.getStructKey()</tml:script>";
	var parentkey="<tml:option name="parent"/>";
	
	var el=Ext.get("struct:"+structkey);
	el.unselectable();
	
	el.removeAllListeners();
	el.on("click", BI.se.selectEntryEvent, el);
	el.on("dblclick", BI.se.toggleEntryEvent, el);
	el.on("contextmenu", BI.se.entryContextMenu, structkey);
	
	var struct=BI.se.structs["struct:"+structkey]={
		type: "struct",
		bestContentKey: "<tml:script>
			var doc = _bestContent
			if(doc)
				return doc.getContentKey(); 
		</tml:script>",
		key:structkey,
		title:"<tml:script>return _Struct.getContentTitleJsEncoded()</tml:script>",
		parent: parentkey,
		area: "<tml:script>return document.getArea().getName()</tml:script>",
		isInTemplateArea: <tml:script expression="_Area.isTemplateArea()"/>,
		contenttype:"<tml:script>return document.getContentType().getName()</tml:script>",
		ctPositioning:"<tml:script>return document.getContentType().getPositioning()</tml:script>",
		allowedPositions:"<tml:script divider="|">return document.getContentType().getAllowedPositions()</tml:script>",
		mayEditChildren:<tml:item name="_mayEditChildren"/>,
		mayEditEntryAndContent:<tml:item name="_mayEditEntryAndContent"/>,
		haschildren:<tml:script expression="_hasChildren"/>,
		isRoot:<tml:script>return document.isRoot()</tml:script>,
		isexpanded:false,
		isloaded:false,
		children:[]
	}

	BI.se.registerDD(el, struct);
	
	if(BI.se.movedEntry && !BI.se.isAllowedDropPosition(BI.se.movedEntry, struct))
		el.setOpacity(.5);

	BI.se.addChildToParent(parentkey, structkey);
	
	var twisty=el.child(".twisty");
	twisty.on("click", BI.se.toggleEntryEvent, el);
	
</script>
		
