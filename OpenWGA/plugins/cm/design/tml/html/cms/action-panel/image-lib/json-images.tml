## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################

<tml:script>
	_dbkey = request.getParameter("image_dbkey");
	_contentkey = WGA.deserializeObject(request.getParameter("contentkey"));		// don't trust users!
	//log.info("load images from " + _dbkey + "/" + _contentkey);
</tml:script>

<tml:case context="[db:{_dbkey}/docid:{_contentkey}]" iscontextvalid="true">
{
	data:[
		<tml:children>
			<tml:script>
				var files = content().getFileNames();
				if(files.size())
					_filename = content().getPrimaryFileName() || files.get(0)
				else _filename=null
			</tml:script>
			<tml:case condition="_filename">
				{
					type: "extfile",
					key: "<tml:script expression="STRUCTKEY+'.'+LANGUAGE+'.0/'+_filename+'/'+_dbkey"/>",
					container: "<tml:script expression="STRUCTKEY+'.'+LANGUAGE+'.0'"/>",
					dbkey: "<tml:item name="_dbkey"/>",
					id: "<tml:meta name="key"/>",
					name: "<tml:item name="_filename"/>",
					shortName: "<tml:script>
							if (_filename.length > 12) {
								return _filename.substr(0, 10) + '...';
							}
							return _filename;
					</tml:script>",
					url: "<tml:url type="file" file="{_filename}"/>",
					poster: "<tml:url type="file" file="{_filename}" derivate="usage=poster"/>",
					mimetype: "<tml:script expression="content().getFileMetaData(_filename).mimeType"/>",
					thumbnail: "<tml:url type="file" file="{_filename}" derivate="usage=poster,width~100" u_maxwidth="100" u_maxheight="100"/>",
					size: <tml:script format="0">return content().getFileSize(_filename)</tml:script>
					
				}<tml:between>,</tml:between>
			</tml:case>
			
		</tml:children>
	]
}	
</tml:case>

