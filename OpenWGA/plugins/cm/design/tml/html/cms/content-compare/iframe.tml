## LICENSE START ###############################################################
## Copyright 2009, 2010 Innovation Gate GmbH. All Rights Reserved.
## 
## This file is part of the OpenWGA server platform.
## 
## OpenWGA is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## In addition, a special exception is granted by the copyright holders
## of OpenWGA called "OpenWGA plugin exception". You should have received
## a copy of this exception along with OpenWGA in file COPYING.
## If not, see <http://www.openwga.com/gpl-plugin-exception>.
## 
## OpenWGA is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with OpenWGA in file COPYING.
## If not, see <http://www.gnu.org/licenses/>.
## LICENSE END #################################################################
<tml:script>
	var database = db(request.getParameter('dbkey'));
	var content = database.getContentByKey(request.getParameter('key1'));
	_outer = content.getStructEntry().getOuterLayout("html").getName();
</tml:script>

<tml:include var="_page1" designdb="{request.getParameter('dbkey')}" ref="{_outer}" context="{'db:'+request.getParameter('dbkey')+'/docid:'+request.getParameter('key1')}"/>
<tml:include var="_page2" designdb="{request.getParameter('dbkey')}" ref="{_outer}" context="{'db:'+request.getParameter('dbkey')+'/docid:'+request.getParameter('key2')}"/>
<tml:script>

	_asHTML = function(dom){
		var outFormat = new Packages.org.dom4j.io.OutputFormat();
		outFormat.setExpandEmptyElements(true);
		outFormat.setSuppressDeclaration(true);
		var outHTML = new java.io.StringWriter();
		var htmlWriter = new Packages.org.dom4j.io.HTMLWriter(outHTML, outFormat);
		htmlWriter.write(dom);
		return outHTML.toString();
	}

	var dom = parseHTML(_page1);
	_head = _asHTML(dom.selectSingleNode("//HEAD"));
	_head = _head.substr(6, _head.length-13);
	_body1 = _asHTML(dom.selectSingleNode("//BODY"));
	var body_class_node = dom.selectSingleNode("//BODY/@class");
	if(body_class_node)
		_body_class = body_class_node.getText();
	var body_onload_node = dom.selectSingleNode("//BODY/@onload");
	if(body_onload_node)
		_body_onload = body_onload_node.getText();
		
	dom = parseHTML(_page2);
	_body2 = _asHTML(dom.selectSingleNode("//BODY"));
	
	var c1 = context('db:'+request.getParameter('dbkey')+'/docid:'+request.getParameter('key1'));
	var c2 = context('db:'+request.getParameter('dbkey')+'/docid:'+request.getParameter('key2'));
	
	if(c1.VERSION < c2.VERSION){
		// swap pages
		var body = _body1;
		_body1 = _body2
		_body2 = body;
	}
	
</tml:script>

<html>
	<head>
		<link rel="stylesheet" href="<tml:url db="{plugin:de.innovationgate.wga-app-framework}" type="css" name="htmldiff"/>"/>
		<tml:item name="_head"/>
		<script>
			function bodyclick(ev){
				ev = ev || window.event;
				if(window.event){
					ev.cancelBubble = true;
					ev.returnValue = false;
				}
				if(ev.stopEvent)
					ev.stopEvent();
				if(ev.preventDefault)
					ev.preventDefault();
				if(ev.stopPropagation)
					ev.stopPropagation();
			}
		</script>
	</head>
	
	<body onclick="bodyclick(event)" 
		<tml:case isdefined="_body_class">class="<tml:item name="_body_class"/>"</tml:case>
		<tml:case isdefined="_body_onload">onload="<tml:item name="_body_onload"/>"</tml:case>
	>
		<tml:element name="htmldiff">
		    <tml:option name="code1" trim="true">
		    	<tml:item name="_body2"/>
		    </tml:option>
		    <tml:option name="code2" trim="true">
		    	<tml:item name="_body1"/>
		    </tml:option>
		</tml:element>
	</body>
	
</html>
