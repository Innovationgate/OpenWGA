
dependencies {
    compile project(":wga");
    compile project(":wgapi");
    compile project(":wgutils");    
    
    compileClasspath project(":wgaBuildTools");    
    compileClasspath 'javax.servlet:javax.servlet-api:3.0.1'
    compileClasspath 'javax.servlet.jsp:jsp-api:2.2'
}

sourceSets {
	main {
		java {
			srcDir 'src'
			output.classesDir = 'design/java'  			
		}
		resources {
			srcDir 'src'
			output.resourcesDir = 'design/java'
		}
	}
} 

task updatePluginVersion << {
	def version = "${openwga_version_major}.${openwga_version_minor}.${openwga_version_maintenance}.${openwga_version_patch}"
	def build = "${openwga_version_build}"
	println "Update ${project.name} to version ${version} Build ${openwga_version_build}"

    ant.taskdef(name:"UpdatePluginVersion", classname:"de.innovationgate.ant.UpdatePluginVersion", classpath: configurations.compileClasspath.asPath)
    ant.UpdatePluginVersion(designDir: "design", version: "${version}", build: "${build}")

}

task buildPluginJars(type: Copy, dependsOn: build) {
    from (tasks.jar.archivePath)
   	into 'design/files/system'
   	rename {'plugin-classes.jar'}
}

task buildPlugin(type: Zip, dependsOn: [buildPluginJars, updatePluginVersion]){
    archiveName = "de.innovationgate.contentmanager-${project.version}.wgaplugin"    
    from('design') {
        into '/'
        exclude 'java'
    }
}
