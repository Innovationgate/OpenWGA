<tml:button id="click1" clickaction="$pc.setConfigValues">Set config values</tml:button>
<tml:button id="click3" clickaction="$pc.updateConfigValues">Update config values</tml:button>
<tml:button id="click5" clickaction="$pc.removeSomeConfigValues">Remove some config values</tml:button>

<tml:script>
	function findCookie(name) {
		for each (c in request.getCookies()) {
			if (c.name==name) return c.value;
		}
		return null;
	}
	var clickStep = parseInt(findCookie("clickStep"));
	var cat = findCookie("testId");
	
	try {
		if (clickStep == 1) {
			assertEquals("Marked first session", cat, firstRequestSession, true);
			assertEquals("Portlet Config: String value stored", cat, $pc.config.someString, "someStringValue");
		}
		else if (clickStep == 2) {
			assertNotEquals("Click Step 2 has new session", cat, firstRequestSession, true);
			assertEquals("Portlet Config: String value persisted", cat, $pc.config.someString, "someStringValue");
			assertEquals("Portlet Config: Number value persisted", cat, $pc.config.someNumber, 5);
			assertEquals("Portlet Config: Bool value persisted", cat, $pc.config.someBool, true);
			assertEquals("Portlet Config: Array persisted", cat, JSON.stringify($pc.config.someArray), JSON.stringify(["a","b","c"]));
			assertEquals("Portlet Config: Object persisted", cat, JSON.stringify($pc.config.someObject), JSON.stringify({a:1, b:2, c:3}));
			assertEquals("Portlet Config: Date persisted", cat, $pc.config.someDate, WGA.parseDate("01.01.2016", "dd.MM.yyyy"));
			assertEquals("Portlet Config: List persisted", cat, $pc.config.someList, WGA.toList("a", "b", "c"));
		}
		else if (clickStep == 3) {
			assertEquals("Marked second session", cat, secondRequestSession, true);
		}
		else if (clickStep == 4) {
			assertNotEquals("Click Step 4 has new session", cat, secondRequestSession, true);
			assertEquals("Portlet Config: String value changed", cat, $pc.config.someString, "someOtherStringValue");
			assertEquals("Portlet Config: Number value changed", cat, $pc.config.someNumber, 6);
			assertEquals("Portlet Config: Bool value changed", cat, $pc.config.someBool, false);
			assertEquals("Portlet Config: Array changed", cat, JSON.stringify($pc.config.someArray), JSON.stringify(["d","e","f"]));
			assertEquals("Portlet Config: Object changed", cat, JSON.stringify($pc.config.someObject), JSON.stringify({d:4, e:5, f:6}));
			assertEquals("Portlet Config: Date changed", cat, $pc.config.someDate, WGA.parseDate("01.02.2016", "dd.MM.yyyy"));
			assertEquals("Portlet Config: List changed", cat, $pc.config.someList, WGA.toList("d", "e", "f"));
		}
		else if (clickStep == 5) {
			assertEquals("Marked third session", cat, thirdRequestSession, true);
		}
		else if (clickStep == 6) {
			assertNotEquals("Click Step 6 has new session", cat, thirdRequestSession, true);
			assertEquals("Portlet Config: String value removed", cat, $pc.config.someString, undefined);
			assertEquals("Portlet Config: Number value removed", cat, $pc.config.someNumber, undefined);
			assertEquals("Portlet Config: Bool value removed", cat, $pc.config.someBool, undefined);
			assertEquals("Portlet Config: Array still available", cat, JSON.stringify($pc.config.someArray), JSON.stringify(["d","e","f"]));
			assertEquals("Portlet Config: Object still available", cat, JSON.stringify($pc.config.someObject), JSON.stringify({d:4, e:5, f:6}));
			assertEquals("Portlet Config: Date still available", cat, $pc.config.someDate, WGA.parseDate("01.02.2016", "dd.MM.yyyy"));
			assertEquals("Portlet Config: List still available", cat, $pc.config.someList, WGA.toList("d", "e", "f"));
		}
			
	}
	catch (e) {
		logException(e);
		assertTrue("Exception running tests", cat, "false");
	}
</tml:script>