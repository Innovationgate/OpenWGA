function SessionScopeObject() {
	this.state = {
		data: "None yet",
		id: java.util.UUID.randomUUID().toString(),
		dbKeyInEvent: null,
		login: null
	}
	WGA.log.info("SessionScopeObject created: " + this.state.id);
}

SessionScopeObject.prototype.theEvent = function($event, $cx) {	
	WGA.log.info("Catching session event: " + this.state.id + " on SessionScopeObject " + this.state.id);
	$cx.setSessionVar("ssoAccessingSession", "yes");
	this.state.login = WGA.app().getUserName();
	this.state.data = $event.params.data;
	this.state.dbKeyInEvent = WGA.app().getDbKey();
}.listenToAppEvents("thatEvent");

SessionScopeObject.prototype.getEventData = function() {
	return "Session scope: " + this.state.data;
}

SessionScopeObject.prototype.onlySessionScope = WGA.synchronizedFunction(function($event, AppScopeObject) {
	AppScopeObject.sessionOnlyEventCount++;
}).listenToAppEvents("onlySessionScopeEvent");

SessionScopeObject.prototype.getAppKey = function() {
	return WGA.app().getDbKey();
}

SessionScopeObject.prototype.onLogin = function($event) {
	this.state.hadALogin = true;
}.listenToAppEvents("auth=login")

SessionScopeObject.prototype.onLogout = function($event) {
	this.state.hadALogout = true;
}.listenToAppEvents("auth=logout")

SessionScopeObject.prototype.isWGAIsolated = function() {
	return WGA.isIsolated();
}

SessionScopeObject.prototype.isCxIsolated = function($cx) {
	return  !$cx.isWebEnvironment() && $cx.request == null && $cx.response == null && $cx.httpsession == null;
}