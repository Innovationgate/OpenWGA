<tml:action id="actionOnEvent">
eventActionRan = true;
actionEventP1 = portletEvent.getParameter("p1");
actionEventP2 = portletEvent.getParameter("p2");
actionEventP3 = portletEvent.getParameter("p3");
actionEventP4 = portletEvent.getParameter("p4");  

</tml:action>

<tml:eventscript onevent="thatEvent" action="actionOnEvent" ajax="true">
eventScriptRan = true;
scriptEventP1 = portletEvent.getParameter("p1");
scriptEventP2 = portletEvent.getParameter("p2");
scriptEventP3 = portletEvent.getParameter("p3");
scriptEventP4 = portletEvent.getParameter("p4");  
</tml:eventscript>

<tml:script>
		function findCookie(name) {
			for each (c in request.getCookies()) {
				if (c.name==name) return c.value;
			}
			return "0";
		}
		var clickStep = parseInt(findCookie("clickStep"));
		var cat = findCookie("testId");

		
		
		try {
		
			if (clickStep == 0) {
				portlet.setMode("edit");
				portlet.setSessionVar("name", portlet.name);
				portlet.setcontext(context("name:home"));
			}

			if (clickStep == 7) {
				assertEquals("Throw event - Event action ran", cat, eventActionRan, true);
				assertEquals("Throw event - Read string event parameter in action", cat, actionEventP1, "value1");
				assertEquals("Throw event - Read number parameter in action", cat, actionEventP2, 5.0);
				assertEquals("Throw event - Read date parameter in action", cat, actionEventP3, WGA.parseDate("1999.12.31 23:59:59", "yyyy.MM.dd HH:mm:ss"));
				assertEquals("Throw event - Read boolean parameter in action", cat, actionEventP4, true);
				assertEquals("Throw event - Event script ran", cat, eventScriptRan, true);
				assertEquals("Throw event - Read string event parameter in script", cat, scriptEventP1, "value1");
				assertEquals("Throw event - Read number parameter in script", cat, scriptEventP2, 5.0);
				assertEquals("Throw event - Read date parameter in script", cat, scriptEventP3, WGA.parseDate("1999.12.31 23:59:59", "yyyy.MM.dd HH:mm:ss"));
				assertEquals("Throw event - Read boolean parameter in script", cat, scriptEventP4, true);
			}
			

			assertEquals("ClickStep " + clickStep + " - Portlet still owns mode", cat, portlet.mode, "edit");
			assertEquals("ClickStep " + clickStep + " - Portlet still owns session variable", cat, portlet.getsessionvar("name"), "level3-3");
			assertEquals("ClickStep " + clickStep + " - Portlet still owns context", cat, portlet.context.path, context("name:home", false).path);
			

		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
</tml:script>

Level 3 - 3 - Mode <tml:script expression="portlet.mode"/>