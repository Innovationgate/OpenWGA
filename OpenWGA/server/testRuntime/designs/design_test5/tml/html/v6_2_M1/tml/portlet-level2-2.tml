<tml:script>
	function findCookie(name) {
		for each (c in request.getCookies()) {
			if (c.name==name) return c.value;
		}
		return 0;
	}
	var clickStep = parseInt(findCookie("clickStep"));
	if (clickStep == 0) {
		portlet.setMode("edit");
		portlet.setSessionVar("name", portlet.name);
		portlet.setItem("anitem", "avalue");
	}
</tml:script>

Level 2 - 2 - Mode <tml:script expression="portlet.mode"/>

<a id="click9" href="<tml:url ajax="true" type="action">portlet.clearState();</tml:url>">Clear portlet state</a>

<tml:script>
		function findCookie(name) {
			for each (c in request.getCookies()) {
				if (c.name==name) return c.value;
			}
			return "0";
		}
		var clickStep = parseInt(findCookie("clickStep"));
		var cat = findCookie("testId");
		
		try {
		
			if (clickStep == 0) {
				assertEquals("Portlet level 2 - 2: Mode is edit", cat, portlet.mode, "edit");
				assertEquals("Portlet level 2 - 2: Session var name was set", cat, portlet.getsessionvar("name"), "level2-2");
				assertEquals("Portlet level 2 - 2: Item was set", cat, portlet.anitem, "avalue");
			}
		
			if (clickStep == 9) {
				assertEquals("Portlet level 2 - 2: Mode was reset to view", cat, portlet.mode, "view");
				assertEquals("Portlet level 2 - 2: Session var name was removed", cat, portlet.getsessionvar("name"), null);
				assertEquals("Portlet level 2 - 2: Item is still set", cat, portlet.anitem, "avalue");
			}

		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
</tml:script>