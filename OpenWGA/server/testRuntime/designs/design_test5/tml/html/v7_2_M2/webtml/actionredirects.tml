<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	Tests action redirect data
	</PRE>
	
	<hr>
	
	<tml:form id="theform">
	</tml:form>
	
	<a href="<tml:url action="$mc.doRedirect"/>" id="click1">Redirect to openwga.com</a>
	
	<tml:script>
		function findCookie(name) {
			for each (c in request.getCookies()) {
				if (c.name==name) return c.value;
			}
			return null;
		}
		var clickStep = parseInt(findCookie("clickStep"));
		var cat = findCookie("testId");
		
		try {
		
			var envBuilder = Packages.de.innovationgate.wgpublisher.webtml.init.WebTMLEnvironmentBuilder;
			
			assertEquals("Redirect data: To URL", cat, envBuilder.interpretRedirectionData(this, {url:"http://www.openwga.com"}), "http://www.openwga.com");
			assertEquals("Redirect data: To context", cat, envBuilder.interpretRedirectionData(this, {context:context("name:home")}), context("name:home").contenturl());
			assertEquals("Redirect data: To context path", cat, envBuilder.interpretRedirectionData(this, {context:context("name:home").path}), context("name:home").contenturl());
			assertEquals("Redirect data: To layout", cat, envBuilder.interpretRedirectionData(this, {layout:"xyz"}), layouturl(null, "xyz"));
			assertEquals("Redirect data: To layout, medium", cat, envBuilder.interpretRedirectionData(this, {layout:"xyz", medium:"abc"}), layouturl("abc", "xyz"));
			assertEquals("Redirect data: To layout, medium, db", cat, envBuilder.interpretRedirectionData(this, {db:"test1", layout:"xyz", medium:"abc"}), layouturl("test1", "abc", "xyz"));
			assertEquals("Redirect data: To layout, medium, db", cat, envBuilder.interpretRedirectionData(this, {db:"test1", layout:"xyz", medium:"abc"}), layouturl("test1", "abc", "xyz"));
			assertEquals("Redirect data: To content file", cat, envBuilder.interpretRedirectionData(this, {context:context("name:home"), file:"scaled.png"}), context("name:home").fileurl("scaled.png"));
			assertEquals("Redirect data: To container file", cat, envBuilder.interpretRedirectionData(this, {container:"images", file:"scaled.png"}), fileurl("images", "scaled.png"));
			assertEquals("Redirect data: To container file, db", cat, envBuilder.interpretRedirectionData(this, {db:"test1", container:"images", file:"scaled.png"}), fileurl("test1", "images", "scaled.png"));
			
			var fileData =  context("name:home").content().getFileData("scaled.png");
			tmlform.addfile(fileData, "scaled.png");
			fileData.close();
			
			assertEquals("Redirect data: To form file", cat, envBuilder.interpretRedirectionData(this, {form:"theform", file:"scaled.png"}), tmlform.fileurl("scaled.png"));
			
			assertEquals("Redirect data: Make absolute", cat, 
				envBuilder.interpretRedirectionData(this, {form:"theform", file:"scaled.png", absolute:true}), 
				WGA.urlBuilder(tmlform.fileurl("scaled.png")).build(true));
				
			assertEquals("Redirect data: Add URL param", cat, 
				envBuilder.interpretRedirectionData(this, {form:"theform", file:"scaled.png", urlParams: {a:"b"}}), 
				WGA.urlBuilder(tmlform.fileurl("scaled.png")).setParameter("a", "b").buildLikeGiven());
				
			assertEquals("Redirect data: Add var param", cat, 
				envBuilder.interpretRedirectionData(this, {form:"theform", file:"scaled.png", varParams: {a:"b"}}), 
				WGA.urlBuilder(tmlform.fileurl("scaled.png")).setVarParameter("a", "b").buildLikeGiven());
		
		
			// Execute assertions		
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>