	<tml:button ajax="norefresh" id="click3" clickaction="$pc.fireTheEvent">Fire portlet event</tml:button>
	<tml:button ajax="norefresh" id="click4" clickaction="$pc.fireTheEvent2">Fire portlet event 2</tml:button>
	<tml:button id="click5" clickaction="$refresh">Refresh to regenerate action links</tml:button>
	<tml:button id="click6" clickaction="$pc.fireTheEvent3">Fire app events</tml:button>
	<tml:button id="click7" clickaction="$pc.doWait()">Refresh to test app event receiver</tml:button>
	
	<tml:script>
		function findCookie(name) {
			for each (c in request.getCookies()) {
				if (c.name==name) return c.value;
			}
			return null;
		}
		var clickStep = parseInt(findCookie("clickStep"));
		var cat = findCookie("testId");
		
		try {
			log.info("I am session " + httpsession.id);
			if (clickStep == 3) {
				assertEquals("listenToPortletEvents() triggers event", cat, thisEventHappened, "This is the event param");
			}
			if (clickStep == 4) {
				assertEquals("listenToPortletEvents() triggers event with AJAX parameter", cat, thisEventHappened2, "This is the event param 2");
				assertEquals("listenToPortletEvents() triggers event, AJAX parameter was used", cat, andItHappenedInAjaxMode2, false);
			}
			if (clickStep == 7) {
				log.info("I am session " + httpsession.id + ", AppEventReceiver is " + java.lang.System.identityHashCode(AppEventReceiver));
				assertTrue("App event 1 session " + httpsession.id + " thrown via action result object ", cat, "AppEventReceiver.appEvent1 != null && AppEventReceiver.appEvent1 != undefined");
				assertEquals("App event 1 thrown via action result object: Received param", cat, AppEventReceiver.appEvent1.params.someParam, "This is the app event param 1");
				assertEquals("App event 1 thrown via action result object: Scope is default CLUSTER", cat, AppEventReceiver.appEvent1.scope, WGA.EventScopes.CLUSTER);
				assertTrue("App event 2, session " + httpsession.id + " thrown via action result object ", cat, "AppEventReceiver.appEvent2 != null && AppEventReceiver.appEvent2 != undefined");
				assertEquals("App event 2 thrown via action result object: Received param", cat, AppEventReceiver.appEvent2.params.someParam, "This is the app event param 2");
				assertEquals("App event 2 thrown via action result object: Scope is SERVER", cat, AppEventReceiver.appEvent2.scope, WGA.EventScopes.SERVER);
			}
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	