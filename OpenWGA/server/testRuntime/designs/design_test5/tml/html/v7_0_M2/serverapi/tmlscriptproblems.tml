<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	Tests registry of problems via TMLScript/WGA Server API
	</PRE>
	
	
	<tml:button id="click1" clickaction="$refresh"/>
	<hr>
	
	<tml:script>
		function findCookie(name) {
			for each (c in request.getCookies()) {
				if (c.name==name) return c.value;
			}
			return null;
		}
		
		function findThatProblem(occ) {
			var problems = WGA.Server.getProblemRegistry().getProblems(Packages.de.innovationgate.wgpublisher.problems.AdministrativeProblemType, occ.getDefaultScope());
			var thatProblem =  null;
			for (var problem in Iterator(problems)) {
				if (problem.path.key == 'unittest.someproblem') {
					thatProblem = problem;
					break;
				}
			}
			return thatProblem;
		}
		
		var clickStep = parseInt(findCookie("clickStep"));
		var cat = findCookie("testId");
		
		try {
			
			if (clickStep == 0) {
				var occ = WGA.design().startProblemOccasion("unittest");
				WGA.design().addProblem(occ, "someproblem", {prop: "proposed variable"});
				
				java.lang.Thread.currentThread().sleep(10000);
				
				var problem = findThatProblem(occ);
				var loc = new java.util.Locale("en");
				
				assertEquals("Problem was registered", cat, problem != null, true);
				assertEquals("Problem title", cat, problem.getTitle(loc), "Unittest title");
				assertEquals("Problem message", cat, problem.getMessage(loc), "Unittest message");
				assertEquals("Problem description", cat, problem.getDescription(loc), "Unittest description test5");
				assertEquals("Problem solution", cat, problem.getSolution(loc), "Unittest solution proposed variable");
				
			}
			else if (clickStep == 1) {
				var occ = WGA.design().startProblemOccasion("unittest");
				java.lang.Thread.currentThread().sleep(10000);
				
				var problem = findThatProblem(occ);
				assertEquals("Problem was cleared again", cat, problem == null, true);
			}
			
			
			
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>