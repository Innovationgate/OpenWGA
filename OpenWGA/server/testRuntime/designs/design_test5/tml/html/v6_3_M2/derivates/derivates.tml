<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	Tests retrieving file derivates
	</PRE>
	
	<hr>
	
	<tml:range context="name:derivatetest">
	
		<div id="derivatetestkey"><tml:meta name="key"/></div>
	
		<!-- Serving originals -->
		<tml:image file="dome.jpg">id="tmlImage0"</tml:image>
		
		<img id="htmlImage0" src="<tml:url file="dome.jpg"/>">
		
		<img id="scriptletImage0" src="<tml:range encode="rtf">{@!imgurl:dome.jpg@}</tml:range>">
		
		<!-- Serving small thumbnail derivates using ~ operator -->
		<tml:image file="dome.jpg" derivate="width~200">id="tmlImage1"</tml:image>
		
		<img id="htmlImage1" src="<tml:url file="dome.jpg" derivate="width~200"/>">

		<!-- Serving small thumbnail derivates using ~ operator and usage term -->
		<tml:image file="dome.jpg" derivate="width~200,usage=poster">id="tmlImage2"</tml:image>
		
		<img id="htmlImage2" src="<tml:url file="dome.jpg" derivate="width~200,usage=poster"/>">
		
		<!-- Influencing image derivates with range -->
		<tml:range imagederivates="width~200">

			<!-- Using global query -->
			<tml:image file="dome.jpg">id="tmlImage3"</tml:image>
		
			<img id="htmlImage3" src="<tml:url file="dome.jpg"/>">
			
			<img id="scriptletImage1" src="<tml:range encode="rtf">{@!imgurl:dome.jpg@}</tml:range>">
			
			<!-- Non-image file must still be served as original -->
			<a id="nonImage1" href="<tml:url file="nonimage.pdf"/>">Non-Image</a>
			
			<!-- Merging terms -->
			<tml:image file="dome.jpg" derivate="type=image">id="tmlImage15"</tml:image>
		
			<img id="htmlImage15" src="<tml:url file="dome.jpg" derivate="type=image"/>">

			<!-- Overwriting terms -->
			<tml:image file="dome.jpg" derivate="width~400">id="tmlImage16"</tml:image>
		
			<img id="htmlImage16" src="<tml:url file="dome.jpg" derivate="width~400"/>">

			<!-- Clearing terms -->
			<tml:image file="dome.jpg" derivate="clear,height~200">id="tmlImage17"</tml:image>
		
			<img id="htmlImage17" src="<tml:url file="dome.jpg" derivate="clear,height~200"/>">
			
			<!-- Forcing original -->
			<tml:image file="dome.jpg" derivate="none">id="tmlImage18"</tml:image>
		
			<img id="htmlImage18" src="<tml:url file="dome.jpg" derivate="none"/>">
		
		</tml:range>
		
		<!-- Serving larger image derivate -->
		<tml:image file="dome.jpg" derivate="width~400,usage=poster">id="tmlImage4"</tml:image>
		
		<img id="htmlImage4" src="<tml:url file="dome.jpg" derivate="width~400,usage=poster"/>">
		
		<!-- Serving original as best match for poster derivate -->
		<tml:image file="dome.jpg" derivate="width~1100,usage=poster">id="tmlImage5"</tml:image>
		
		<img id="htmlImage5" src="<tml:url file="dome.jpg" derivate="width~1100,usage=poster"/>">
		
		<!-- Do not serve original as best match for icon derivate -->
		<tml:image file="dome.jpg" derivate="width>=1100,usage=icon">id="tmlImage10"</tml:image>
		
		<img id="htmlImage10" src="<tml:url file="dome.jpg" derivate="width>=1100,usage=icon"/>">

		<!-- Serving original as best match even though smaller than requested, because ~ also allows smaller images -->
		<tml:image file="dome.jpg" derivate="width~5000,usage=poster">id="tmlImage6"</tml:image>
		
		<img id="htmlImage6" src="<tml:url file="dome.jpg" derivate="width~5000,usage=poster"/>">

		<!-- Serving a different derivate usage: icon -->
		<tml:image file="dome.jpg" derivate="usage=icon">id="tmlImage7"</tml:image>
		
		<img id="htmlImage7" src="<tml:url file="dome.jpg" derivate="usage=icon"/>">
		
		<!-- Do not serve anything when derivate terms fail (because of greater than operator) -->
		<tml:image file="dome.jpg" derivate="width>=5000,usage=poster">id="tmlImage8"</tml:image>
		
		<img id="htmlImage8" src="<tml:url file="dome.jpg" derivate="width>=5000,usage=poster"/>">
		
		<!-- Serve derivate with greater than operator -->
		<tml:image file="dome.jpg" derivate="width>=400,usage=poster">id="tmlImage9"</tml:image>
		
		<img id="htmlImage9" src="<tml:url file="dome.jpg" derivate="width>=400,usage=poster"/>">
		
		<!-- Retrieve derivate via ID -->
		<tml:script>
			for (var md in Iterator(content().getFileDerivates("dome.jpg"))) {
				if (md.getDisplayWidth() == 1024) {
					theDerivateId1 = md.id;
					break;				
				}			
			}
		</tml:script>
		<tml:image file="dome.jpg" derivate="[id={theDerivateId1}]">id="tmlImage11"</tml:image>
		
		<img id="htmlImage11" src="<tml:url file="dome.jpg" derivate="[id={theDerivateId1}]"/>">
		
		<!-- Retrieve derivate via WGA.selectDerivate() -->
		<tml:script>
			var md = WGA.selectDerivate("dome.jpg", "width~1000");
			if (md != null) {
				theDerivateId2 = md.id;
			}
		</tml:script>
		<tml:image file="dome.jpg" derivate="[id={theDerivateId2}]">id="tmlImage12"</tml:image>
		
		<img id="htmlImage12" src="<tml:url file="dome.jpg" derivate="[id={theDerivateId2}]"/>">
		
		<!-- Serving a derivate width term type -->
		<tml:image file="dome.jpg" derivate="usage=icon,type=image">id="tmlImage13"</tml:image>
		
		<img id="htmlImage13" src="<tml:url file="dome.jpg" derivate="usage=icon,type=image"/>">

		<tml:image file="dome.jpg" derivate="usage=icon,type=image/png">id="tmlImage14"</tml:image>
		
		<img id="htmlImage14" src="<tml:url file="dome.jpg" derivate="usage=icon,type=image/png"/>">

	
	</tml:range>
	
	<tml:script>
		function findCookie(name) {
			for each (c in request.getCookies()) {
				if (c.name==name) return c.value;
			}
			return null;
		}
		var clickStep = parseInt(findCookie("clickStep"));
		var cat = findCookie("testId");
		
		try {
			// Execute assertions		
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>