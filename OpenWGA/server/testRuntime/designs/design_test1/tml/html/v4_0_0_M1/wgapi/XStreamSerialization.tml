<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0Transitional//EN">
<html>
<head>
  <tml:htmlhead/> 
</head>
<body>
<PRE>
Test for FEATURE: F00003062
This test tries to store an custom object in a content document. And checks the result.
The object should be stored as serialized xml-data from XStream.
</PRE>

<tml:action id="save">
	var sessionId = this.getrequest().getSession().getId();
	callAction("saveMaster", sessionId);
	
	//check if wga uses xstream
	var con = db().getNativeObject().connection();
//	var statement = con.prepareStatement("SELECT textvalue FROM content_items where name='myobject'"); 
	try {
		var statement = con.prepareStatement("SELECT ci.textvalue FROM content_items ci, content c where ci.name='myobject' and ci.cuid=c.cuid and c.structentry='8a8181b80d9c6fb9010d9c72cfb40007' and c.version='1' and c.language='de'");
	} catch (e) {
		Packages.java.lang.System.out.println(e);
	}
	
	var rs = statement.executeQuery();
	if (rs.next()) {
		var xml = rs.getString(1);
		// deserialize object from xml
		try {
			var xstream = new Packages.com.thoughtworks.xstream.XStream(new Packages.com.thoughtworks.xstream.io.xml.Dom4JDriver());
			var myObject = xstream.fromXML(xml);
			asserttrue("myObject successfully deserialized from manually retrieved xml", "wgapi:XStreamSerialization", "true");
			// check deserialized object
			assertequals("manually deserialized object is instance of Assertion", "wgapi:XStreamSerilization", myObject.getClass().getName(), "de.innovationgate.wgpublisher.test.Assertion"); 
			assertequals("manually deserialized object was saved during this HttpSession", "wgapi:XStreamSerilization", myObject.getType(), sessionId); 				
		} catch (e) {
			asserttrue("myObject successfully deserialized from manually retrieved xml", "wgapi:XStreamSerialization", "false");
		}
	}
</tml:action>

<tml:action id="saveMaster" master="true">
	var sessionId = tmlparam1;

	// create object (Assertion)
	var myObject = new Packages.de.innovationgate.wgpublisher.test.Assertion(sessionId,"This assertion should be serialized.","WGAPI");
	
	var context = this.context("DOCID:8a8181b80d9c6fb9010d9c72cfb40007.de.1", false);
	try {
		context.content().setItemValue("myObject", myObject);
		context.content().save();
 		asserttrue("myObject saved successfully", "wgapi:XStreamSerialization", "true");
	} catch (e) {
		asserttrue("myObject saved successfully", "wgapi:XStreamSerialization", "false");
		logException(e);
		return;
	}
	

</tml:action>

<tml:action id="load">
	var sessionId = this.getrequest().getSession().getId();
	callAction("loadMaster", sessionId);
</tml:action>

<tml:action id="loadMaster" master="true">
	var sessionId = tmlparam1;
	
	// clear cache to ensure object is deserialized from backend	
	db().refresh();
	
	var context = this.context("DOCID:8a8181b80d9c6fb9010d9c72cfb40007.de.1");
	
	try {
		var myObject = context.content().getItemValue("myObject");	
		asserttrue("myObject loaded successfully", "wgapi:XStreamSerialization", myObject != null);
	} catch (e) {
		asserttrue("myObject loaded successfully", "wgapi:XStreamSerialization", "false");
	}

	// check deserialized object
	assertequals("myObject is instance of Assertion", "wgapi:XStreamSerilization", myObject.getClass().getName(), "de.innovationgate.wgpublisher.test.Assertion"); 
	assertequals("myObject was saved during this HttpSession", "wgapi:XStreamSerilization", myObject.getType(), sessionId); 				
</tml:action>

<tml:button clickaction="save" id="save">save</tml:button><br/>
<tml:button clickaction="load" id="load">load</tml:button></br>

<tml:warnings/>

</body>
</html>