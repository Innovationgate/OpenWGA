<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	Tests for calling master and async actions, especially for B00004F1E
	</PRE>
	
	<tml:action id="master1" master="true">
		setVar("masterid", meta("db", "username"));
	</tml:action>
	
	<tml:action id="async1" master="true" async="true">
	    java.lang.Thread.sleep(5000);
		setVar("async1done", true);
	</tml:action>
	
	<tml:action id="master2" master="true">
		callAction("async2");
	</tml:action>
	
	<tml:action id="async2" master="true" async="true">
	    java.lang.Thread.sleep(5000);
		setVar("async2done", true);
	</tml:action>
	
	<hr>
	
	<tml:script>
		var cat = "TMLAction:MasterAndAsync";
		
		// Prepare sequence variable to be able to determine the request sequence number
		if (isdefined("seq")) {
			seq++;
		}
		else {
			setSessionVar("seq", 1);
		}
		
		try {
			callAction("master1");
			assertEquals("Execute master action", cat, masterid, db().MASTER_USERNAME);
			
			callAction("async1");
			assertTrue("Execute master action as async", cat, "!isdefined('async1done')");
			java.lang.Thread.sleep(10000);
			assertTrue("Async1 action was actually called", cat, "isdefined('async1done')");
			
			callAction("master2");
			assertTrue("Execute async action from another master action", cat, "!isdefined('async2done')");
			java.lang.Thread.sleep(10000);
			assertTrue("Async2 action was actually called", cat, "isdefined('async2done')");
					
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>