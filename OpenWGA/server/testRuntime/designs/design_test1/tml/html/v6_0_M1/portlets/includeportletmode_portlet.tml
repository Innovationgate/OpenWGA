

<tml:button id="click1" portletmode="edit" portletcontext="name:home" ajax="true">Enter portletmode "edit"</tml:button>

<tml:button id="click2" portletmode="view" ajax="true">Enter portletmode "view"</tml:button>

<tml:button id="click3" portletmode="edit" portletcontext="name:home" ajax="true">Enter portletmode "edit" again</tml:button>

<tml:script>
		var cat = "TMLPortlets";
		
		// Prepare sequence variable to be able to determine the request sequence number
		if (isdefined("seq")) {
			seq++;
		}
		else {
			setSessionVar("seq", 1);
		}
		
		try {

			var phase;
			if (seq == 1) {
				phase = "Initial load";
				assertEquals(phase + ": Portletmode is 'view'", cat, portlet.mode, "view");
				assertEquals(phase + ": Portletcontext is empty", cat, portlet.context, null);
				assertTrue(phase + ": Portlet tml context is fake", cat, "content().isDummy()");
			}
			else if (seq == 2) {
				phase = "Change mode 'edit'";
				assertEquals(phase + ": Portletmode is 'edit'", cat, portlet.mode, "edit");
				assertEquals(phase + ": Portletcontext is name:home", cat, portlet.context.KEY, context("name:home").KEY);
				assertEquals(phase + ": Portlet tml context is name:home", cat, KEY, context("name:home").KEY);
			}
			else if (seq == 3) {
				phase = "Change mode 'view'";
				assertEquals(phase + ": Portletmode is 'view'", cat, portlet.mode, "view");
				assertEquals(phase + ": Portletcontext is still name:home", cat, portlet.context.KEY, context("name:home").KEY);
				assertEquals(phase + ": Portlet tml context is still name:home", cat, KEY, context("name:home").KEY);
			}
			else if (seq == 4) {
				phase = "Change mode 'edit' 2nd time";
				assertEquals(phase + ": Portletmode is 'edit'", cat, portlet.mode, "edit");
				assertEquals(phase + ": Portletcontext is still name:home", cat, portlet.context.KEY, context("name:home").KEY);
				assertEquals(phase + ": Portlet tml context is still name:home", cat, KEY, context("name:home").KEY);
			}
			else if (seq == 5) {
				phase = "External reload, mode reset";
				assertEquals(phase + ": Portletmode is 'view'", cat, portlet.mode, "view");
				assertEquals(phase + ": Portletcontext is still name:home", cat, portlet.context.KEY, context("name:home").KEY);
				assertEquals(phase + ": Portlet tml context is still name:home", cat, KEY, context("name:home").KEY);
			}
		
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>