<html>
<head>
  <tml:htmlhead/>
</head>

<tml:action  master="true" async="true" id="a_action_1">
	// lock db for 10s
	var category = "locking:createRemoveObjectsDuringLock(a_action_1)";
	try {
		// lock db
		var lockDBStartTime = java.lang.System.currentTimeMillis();
		this.db().lock();	
		assertequals("db locked successfully", category, true, true);
		var lockDBEndTime = java.lang.System.currentTimeMillis();
		durationDB = (lockDBEndTime - lockDBStartTime);
				
		asserttrue("db locked within 1s", category, "durationDB < 1000");			
		
		// do some work
		Packages.java.lang.Thread.sleep(10000);
	} catch (e) {
		asserttrue("no exception thrown", category, "false");
	}	
</tml:action>

<tml:action async="true" master="true" id="b_action_1">
	// try to create content for structEntry A
	var category = "locking:createRemoveObjectsDuringLock(b_action_1)";
	var seA = this.context("docid:owee-5aegzr").getdocument().getStructEntry();
		
	try {
		this.db().createContent(seA, null, "newContent");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	// try to create child entry for structEntry A
	try {
		this.db().createStructEntry(seA, null, "newStructEntry");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	
</tml:action>

<tml:action  master="true" async="true" id="a_action_2">
	// lock structEntry A for 10s
	var category = "locking:createRemoveObjectsDuringLock(a_action_2)";
	try {
		var seA = this.context("docid:owee-5aegzr").getdocument().getStructEntry();
		var lockStartTime = java.lang.System.currentTimeMillis();
		seA.lock();
		assertequals("structEntry A locked successfully", category, true, true);
		var lockEndTime = java.lang.System.currentTimeMillis();
		duration = (lockEndTime - lockStartTime);
				
		asserttrue("structentry A locked within 1s", category, "duration < 1000");			
		
		// do some work
		Packages.java.lang.Thread.sleep(10000);
	} catch (e) {
		asserttrue("no exception thrown", category, "false");
	}	
</tml:action>

<tml:action  master="true" async="true" id="a_action_3">
	// lock area A (home) for 10s
	var category = "locking:createRemoveObjectsDuringLock(a_action_3)";
	try {
		var areaA = this.db().getArea("home");
		var lockStartTime = java.lang.System.currentTimeMillis();
		areaA.lock();
		assertequals("area A locked successfully", category, true, true);
		var lockEndTime = java.lang.System.currentTimeMillis();
		duration = (lockEndTime - lockStartTime);
				
		asserttrue("area A locked within 1s", category, "duration < 1000");			
		
		// do some work
		Packages.java.lang.Thread.sleep(10000);
	} catch (e) {
		asserttrue("no exception thrown", category, "false");
	}	
</tml:action>

<tml:action async="true" master="true" id="b_action_2">
	var category = "locking:createRemoveObjectsDuringLock(b_action_2)";		
	// try to create user profile
	try {
		this.db().createUserProfile("newProfile", 0);
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create userprofile", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	// try to create area
	try {
		this.db().createArea("newArea");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create area", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	// try to create contentType
	try {
		this.db().createContentType("newContentType");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create contentType", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	// try to create TMLModule
	try {
		this.db().createTMLModule("newTMLModule", "html");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create TMLModule", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}

	// try to create cssJsModule
	try {
		this.db().createCSSJSModule("newCSSJS" , "css");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create cssJSModule", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	// try to create filecontainer
	try {
		this.db().createFileContainer("newFileContainer");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create fileContainer", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}

	// try to create language
	try {
		this.db().createLanguage("newLanguage", "deDE");
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create language", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	// try to create draft copy of doc A
	try {
		var docA = this.context("docid:owee-5aegzr").getdocument();
		this.db().createDraftCopy(docA);
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create draftCopy", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}

	// try to create copy of area A (home)
	try {
		var areaA = this.db().getArea("home");
		this.db().createCopy(areaA);
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - create copy", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
					
</tml:action>

<tml:action  master="true" async="true" id="b_action_3">
	var category = "locking:createRemoveObjectsDuringLock(b_action_3)";
	
	// try to remove doc A
	try {
		var docA = this.context("docid:owee-5aegzr").getdocument();
		docA.remove();
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
	
	// try to remove structEntry A
	try {
		var seA = this.context("docid:owee-5aegzr").getdocument().getStructEntry();
		seA.remove();
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
</tml:action>

<tml:action  master="true" async="true" id="b_action_4">
	var category = "locking:createRemoveObjectsDuringLock(b_action_4)";
	
	// try to remove area A (home)
	try {
		var areaA = this.db().getArea("home");
		areaA.remove();
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}
</tml:action>

<tml:action  master="true" async="true" id="a_action_4">
	// lock doc A for 10s
	var category = "locking:createRemoveObjectsDuringLock(a_action_4)";
	try {
		var docA = this.context("docid:owee-5aegzr").getdocument();
		var lockStartTime = java.lang.System.currentTimeMillis();
		docA.lock();
		assertequals("document A locked successfully", category, true, true);
		var lockEndTime = java.lang.System.currentTimeMillis();
		duration = (lockEndTime - lockStartTime);
				
		asserttrue("document A locked within 1s", category, "duration < 1000");			
		
		// do some work
		Packages.java.lang.Thread.sleep(10000);
	} catch (e) {
		asserttrue("no exception thrown", category, "false");
	}	
</tml:action>

<tml:action  master="true" async="true" id="b_action_5">
	var category = "locking:createRemoveObjectsDuringLock(b_action_5)";
	
	var seA = this.context("docid:owee-5aegzr").getdocument().getStructEntry();
	var seB = this.context("docid:jjar-5xesg8").getdocument().getStructEntry();
	try {
		this.db().moveStructEntry(seA, seB);
		asserttrue("exception thrown", category, "false");
	} catch (e) {
		assertequals("ResourceIsLockedException thrown - move structentry", category, e.javaException.getClass().getName(), "de.innovationgate.webgate.api.locking.ResourceIsLockedException");
	}		
</tml:action>

<tml:action  master="true" async="true" id="a_action_5">
	// lock se B for 10s
	var category = "locking:createRemoveObjectsDuringLock(a_action_5)";
	try {
		var seB = this.context("docid:jjar-5xesg8").getdocument().getStructEntry();
		var lockStartTime = java.lang.System.currentTimeMillis();
		seB.lock();
		assertequals("structentry B locked successfully", category, true, true);
		var lockEndTime = java.lang.System.currentTimeMillis();
		duration = (lockEndTime - lockStartTime);
				
		asserttrue("structentry B locked within 1s", category, "duration < 1000");			
		
		// do some work
		Packages.java.lang.Thread.sleep(10000);
	} catch (e) {
		asserttrue("no exception thrown", category, "false");
	}	
</tml:action>

<tml:action  master="true" async="true" id="a_action_6">
	// lock area B for 10s
	var category = "locking:createRemoveObjectsDuringLock(a_action_6)";
	try {	
		var areaB = this.db().getArea("online-help");
		var lockStartTime = java.lang.System.currentTimeMillis();
		areaB.lock();
		assertequals("area B locked successfully", category, true, true);
		var lockEndTime = java.lang.System.currentTimeMillis();
		duration = (lockEndTime - lockStartTime);
				
		asserttrue("area B locked within 1s", category, "duration < 1000");			
		
		// do some work
		Packages.java.lang.Thread.sleep(10000);
	} catch (e) {
		asserttrue("no exception thrown", category, "false");
	}	
</tml:action>

<body>
	<tml:button clickaction="a_action_1" id="a_action_1">a_action_1</tml:button>
	<tml:button clickaction="a_action_2" id="a_action_2">a_action_2</tml:button><br/>	
	<tml:button clickaction="a_action_3" id="a_action_3">a_action_3</tml:button>
	<tml:button clickaction="a_action_4" id="a_action_4">a_action_4</tml:button><br/>
	<tml:button clickaction="a_action_5" id="a_action_5">a_action_5</tml:button>
	<tml:button clickaction="a_action_6" id="a_action_6">a_action_6</tml:button><br/>	
	<hr/>
	<tml:button clickaction="b_action_1" id="b_action_1">b_action_1</tml:button>
	<tml:button clickaction="b_action_2" id="b_action_2">b_action_2</tml:button><br/>	
	<tml:button clickaction="b_action_3" id="b_action_3">b_action_3</tml:button>
	<tml:button clickaction="b_action_4" id="b_action_4">b_action_4</tml:button><br/>	
	<tml:button clickaction="b_action_5" id="b_action_5">b_action_5</tml:button>	
	
	<hr/>
	<table border="1">
	 <th>test</th><th>thread a</th><th>thread b</th><th>actions to call</th><th>wait until next test is started</th>
	 <tr>
	  <td>1</td>
	  <td>
	  	<table>
	  		<tr><td>lock DB</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>create content for structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create childentry of structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_1, wait 1s, b_action_1</td>
  	  <td>20s</td>
	 </tr>
	 <tr>
	  <td>2</td>
	  <td>
	  	<table>
	  		<tr><td>lock structEntry A</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>create content for structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create childentry of structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_2, wait 1s, b_action_1</td>
  	  <td>20s</td>
	 </tr>
	 <tr>
	  <td>3</td>
	  <td>
	  	<table>
	  		<tr><td>lock area A (home)</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>create content for structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create childentry of structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_3, wait 1s, b_action_1</td>
  	  <td>20s</td>
	 </tr>
	 <tr>
	  <td>4</td>
	  <td>
	  	<table>
	  		<tr><td>lock DB</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>create userprofile</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create area</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create contentType</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create tmlModule</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create cssJSModule</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create fileContainer</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create language</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create draftCopy of content A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>create copy of area A</td></tr>
	  		<tr><td>get exception</td></tr>	  			  		
	  	</table>
	  </td>			
	  <td>a_action_1, wait 1s, b_action_2</td>
  	  <td>20s</td>
	 </tr>
	 <tr>
	  <td>5</td>
	  <td>
	  	<table>
	  		<tr><td>lock db</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>remove doc A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>remove structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_1, wait 1s, b_action_3</td>
  	  <td>20s</td>
	 </tr>	 
	 <tr>
	  <td>6</td>
	  <td>
	  	<table>
	  		<tr><td>lock structentry A</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>remove doc A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>remove structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_2, wait 1s, b_action_3</td>
  	  <td>20s</td>
	 </tr>	 
	 <tr>
	  <td>7</td>
	  <td>
	  	<table>
	  		<tr><td>lock area A</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>remove doc A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  		<tr><td>remove structentry A</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_3, wait 1s, b_action_3</td>
  	  <td>20s</td>
	 </tr>	 
	 <tr>
	  <td>8</td>
	  <td>
	  	<table>
	  		<tr><td>lock db</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>remove area A (home)</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_1, wait 1s, b_action_4</td>
  	  <td>20s</td>
	 </tr>	 
	 <tr>
	  <td>9</td>
	  <td>
	  	<table>
	  		<tr><td>lock area</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>remove area A (home)</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_3, wait 1s, b_action_4</td>
  	  <td>20s</td>
	 </tr>	 
	 <tr>
	  <td>10</td>
	  <td>
	  	<table>
	  		<tr><td>lock structentry A</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>remove area A (home)</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_2, wait 1s, b_action_4</td>
  	  <td>20s</td>
	 </tr>	 	
	 <tr>
	  <td>11</td>
	  <td>
	  	<table>
	  		<tr><td>lock document A</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>remove area A (home)</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_4, wait 1s, b_action_4</td>
  	  <td>20s</td>
	 </tr>	 	
	 <tr>
	  <td>12</td>
	  <td>
	  	<table>
	  		<tr><td>lock DB</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>move structentry A to structentry B</td></tr>
	  		<tr><td>get exception</td></tr>	  		
	  	</table>
	  </td>			
	  <td>a_action_1, wait 1s, b_action_5</td>
  	  <td>20s</td>
	 </tr>
	 <tr>
	  <td>13</td>
	  <td>
	  	<table>
	  		<tr><td>lock structEntry A</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>move structentry A to structentry B</td></tr>
	  		<tr><td>get exception</td></tr>  		
	  	</table>
	  </td>			
	  <td>a_action_2, wait 1s, b_action_5</td>
  	  <td>20s</td>
	 </tr>
	 <tr>
	  <td>14</td>
	  <td>
	  	<table>
	  		<tr><td>lock area A (home)</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>move structentry A to structentry B</td></tr>
	  		<tr><td>get exception</td></tr>	  		  		
	  	</table>
	  </td>			
	  <td>a_action_3, wait 1s, b_action_5</td>
  	  <td>20s</td>
	 </tr>	 
	 <tr>
	  <td>15</td>
	  <td>
	  	<table>
	  		<tr><td>lock structentry B</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>move structentry A to structentry B</td></tr>
	  		<tr><td>get exception</td></tr>	  		  		
	  	</table>
	  </td>			
	  <td>a_action_5, wait 1s, b_action_5</td>
  	  <td>20s</td>
	 </tr>	   
	 <tr>
	  <td>16</td>
	  <td>
	  	<table>
	  		<tr><td>lock area B (online-help)</td></tr>
	  		<tr><td>do work 10s</td></tr>
	  	</table>
	  </td>
	  <td>
	  	<table>
	  		<tr><td>move structentry A to structentry B</td></tr>
	  		<tr><td>get exception</td></tr>	  		  		
	  	</table>
	  </td>			
	  <td>a_action_6, wait 1s, b_action_5</td>
  	  <td>20s</td>
	 </tr>	 
	</table>		
</body>


</html>