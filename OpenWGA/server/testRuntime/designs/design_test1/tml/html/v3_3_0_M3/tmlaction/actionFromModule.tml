<html>
<body>
<tml:script context="db:test3">

if (!isdefined("seq")) {
	setSessionVar("seq", 1);
}
else {
	seq++;
}

var cat="tmlaction:fromModule";
if (seq == 1) {
	try {
		callAction("v3_3_0_m3:tmlaction1");
		assertEquals("Calling tml action from module without action tag", cat, tmlaction1, "done");
		
		tmlaction2 = callAction("v3_3_0_m3:tmlaction2");
		assertEquals("Calling tml master action from module with action tag", cat, tmlaction2, true);
		
		tmlaction5 = callAction("v3_3_0_m3:tmlaction5", "theparam");
		assertEquals("Calling tml master action from module, issue parameter", cat, tmlaction5, "theparam");
		
		callAction("logins/v3_3_0_m3:tmlaction3");
		assertEquals("Calling tml action from module in another db", cat, tmlaction3, "done");

		tmlaction9 = callAction("v3_3_0_m3:tmlaction9");
		assertEquals("Calling an tmlaction (in the same database) inside another normal action", cat, tmlaction9, "action9param");

		tmlaction8 = callAction("v3_3_0_m3:tmlaction8");
		assertEquals("Calling an tmlaction (of another database) inside another normal action", cat, tmlaction8, "tmlaction5_done");
		
		tmlaction4 = callAction("v3_3_0_m3:tmlaction4");
		assertEquals("Calling an tmlaction (of another database) inside another master action", cat, tmlaction4, "tmlaction5_done");
		
		var mod = db("test2").getCSSJSModule("v3_3_0_m3:dynamicAction");
		if (mod == null) {
			mod = db("test2").createCSSJSModule("v3_3_0_m3:dynamicAction", Packages.de.innovationgate.webgate.api.WGCSSJSModule.CODETYPE_TMLSCRIPT);
		}
		
		var currentDate = createDate().toString();
		mod.setCode("return '" + currentDate + "'");
		mod.save();
		
		dynamicAction = callAction("test2/v3_3_0_m3:dynamicAction");
		assertEquals("Retrieve updated code of module action", cat, dynamicAction, currentDate);
		
		java.lang.Thread.sleep(3000);
		
		currentDate = createDate().toString();
		mod.setCode("return '" + currentDate + "'");
		mod.save();
		
		dynamicAction = callAction("test2/v3_3_0_m3:dynamicAction");
		assertEquals("Retrieve updated code of module action", cat, dynamicAction, currentDate);
		
	
	}
	catch (e) {
		assertTrue("Error when calling action from module: " + e.message, cat, false);
		addWarning("Error when calling action from module: " + e.message);
	}
}
else if (seq == 2) {
	assertEquals("Calling module tmlaction from action link", cat, tmlaction6, "done");
}
else if (seq == 3) {
	assertTrue("Correct debouncing behaviour of module actions", cat, !isdefined("tmlaction6"));
}
</tml:script>

<a name="tmlaction6" href="<tml:url action="v3_3_0_m3:tmlaction6"/>"TMLAction6</a>
<tml:warnings/>
</body>
</html>