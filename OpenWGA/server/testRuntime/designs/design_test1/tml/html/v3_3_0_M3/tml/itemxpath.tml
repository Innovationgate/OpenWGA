<html>
<body>
<tml:script>
// XPath with parsed XML (dom4j)
xml1 = parseXML("<doc><deep><deepest>A</deepest><deepest>B</deepest></deep></doc>");
xml1b = xml1.getRootElement();
</tml:script>

<tml:script>
// XPath with Rhino XML
xml2 = <doc><deep><deepest>A</deepest><deepest>B</deepest></deep></doc>;
xml2b = xml2; // in javascript XML the document object is the same as the root node object
</tml:script>

<tml:script>
// XPath with Java Bean
xml3 = context("name:home").content();
</tml:script>

<tml:script>
// XPath with XML-Text
xml4 = '<doc><deep><deepest>A</deepest><deepest>B</deepest></deep></doc>';
</tml:script>

<!--  Absolute addressation -->
<tml:range var="xml1result"><tml:item name="xml1" xpath="/doc/deep/deepest" divider=","/></tml:range>
<tml:range var="xml2result"><tml:item name="xml2" xpath="/doc/deep/deepest" divider=","/></tml:range>
<tml:range var="xml4result"><tml:item name="xml4" xpath="/doc/deep/deepest" divider=","/></tml:range>
<tml:range var="xml3result"><tml:item name="xml3" xpath="/structEntry/contentType/name" divider=","/></tml:range>

<!-- Relative addressation -->
<tml:range var="xml1bresult"><tml:item name="xml1b" xpath="deep/deepest" divider=","/></tml:range>
<tml:range var="xml2bresult"><tml:item name="xml2b" xpath="deep/deepest" divider=","/></tml:range>


<tml:script>
var cat = "TML:ItemXpath";
assertEquals("tml:item-Attribute xpath on dom4j XML", cat, xml1result, "A,B");
assertEquals("tml:item-Attribute xpath on Rhino XML", cat, xml2result, "A,B");
assertEquals("tml:item-Attribute xpath on dom4j XML - relative Xpath", cat, xml1bresult, "A,B");
assertEquals("tml:item-Attribute xpath on Rhino XML - relative XPath", cat, xml2bresult, "A,B");
assertEquals("tml:item-Attribute xpath on XML-Text", cat, xml4result, "A,B");
assertEquals("tml:item-Attribute xpath on JavaBean", cat, xml3result, "home");
</tml:script>

<tml:warnings/>

</body>
</html>