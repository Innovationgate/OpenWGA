<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0Transitional//EN">
<html>
<head>
  <tml:htmlhead/>    
  <tml:script>
  	  if (!isdefined("mode")) {		
		  setsessionvar("mode", this.request.getParameter("formmode"));
	  }
	  if (!isdefined("persist")) {
	  	  setsessionvar("persist", this.request.getParameter("persist"));
	  }
  </tml:script>
    
  <tml:action id="validate">
  	var category = "TMLForm:executeValidation";
 	// if form is filled invalid check messages 	
  	if (!this.tmlform.validate()) {
  		if (tmlform.toBeValidated.equals("")) {
  			assertequals("Action='validate' - toBoValidated-Field is empty. Correct message set on tmlform.", category, tmlform.getmessage("toBeValidated"), "toBeValidated is empty");
 		} else if (!tmlform.toBeValidated.equals("Albert Einstein")) {
 			assertequals("Action='validate' - toBoValidated-Field is !'Albert Einstein'. Correct message set on tmlform.", category, tmlform.getmessage("toBeValidated"), "toBeValidated should be 'Albert Einstein'");
 		}
		
		
		if (tmlform.enteredvalue("start").equals("")) {
			assertequals("Action='validate' - start is empty. Correct message set on tmlform.", category, tmlform.getmessage("start"), "start is empty");
		} 			

		if (tmlform.enteredvalue("end").equals("")) {
			assertequals("Action='validate' - end is empty. Correct message set on tmlform.", category, tmlform.getmessage("end"), "end is empty");
		} 			

		
		if (tmlform.parsedvalue("start") != null && tmlform.parsedvalue("end") != null) {
	 		if (!tmlform.parsedvalue("start").before(tmlform.parsedvalue("end"))) {
		 		asserttrue("Action='validate' - startDate is not before endDate. TML-Validate Tag executed. Correct message set on tmlform.", category, "tmlform.getmessages().contains('StartDate must be before EndDate.')");
			} 		
		}
  	} else {
  		// messages are empty
  		asserttrue("Action='validate' - Form validated successfully. No messages.", category, "!tmlform.hasmessages()");
  	}  	  
  </tml:action>
  
  <tml:action id="store">
	  	var category = "TMLForm:executeValidation";  
	  	try {
		    if (this.tmlparam1.equals("content")) {
	  			this.tmlform.storeincontent();
	  		} else if (this.tmlparam1.equals("profile")) {
	  			this.tmlform.storeinprofile();
	  		} else if (this.tmlparam1.equals("portlet")) {
	  			this.tmlform.storeinportlet();
	  		}
		} catch (Exception) {
			// catch nullpointer during store because source="none"
		}
  		if (tmlform.toBeValidated.equals("")) {
  			assertequals("Action=store('" + this.tmlparam1 + "') - toBoValidated-Field is empty. Correct message set on tmlform.", category, tmlform.getmessage("toBeValidated"), "toBeValidated is empty");
 		} else if (!tmlform.toBeValidated.equals("Albert Einstein")) {
 			assertequals("Action=store('" + this.tmlparam1 + "') - toBoValidated-Field is !'Albert Einstein'. Correct message set on tmlform.", category, tmlform.getmessage("toBeValidated"), "toBeValidated should be 'Albert Einstein'");
 		} 		 	

		if (tmlform.enteredvalue("start").equals("")) {
			assertequals("Action=store('" + this.tmlparam1 + "') - start is empty. Correct message set on tmlform.", category, tmlform.getmessage("start"), "start is empty");
		} 			

		if (tmlform.enteredvalue("end").equals("")) {
			assertequals("Action=store('" + this.tmlparam1 + "') - end is empty. Correct message set on tmlform.", category, tmlform.getmessage("end"), "end is empty");
		}  		
 			
		if (tmlform.parsedvalue("start") != null && tmlform.parsedvalue("end") != null) { 		
		 	if (!tmlform.parsedvalue('start').before(tmlform.parsedvalue('end'))) {
			 	asserttrue("Action=store('" + this.tmlparam1 + "') - startDate is not before endDate. TML-Validate Tag executed. Correct message set on tmlform.", category, "tmlform.getmessages().contains('StartDate must be before EndDate.')");
	 		}
	 	}  	  
		if (tmlform.parsedvalue("start") != null && tmlform.parsedvalue("end") != null) {
		 	if (tmlform.parsedvalue('start').before(tmlform.parsedvalue('end')) && tmlform.toBeValidated.equals("Albert Einstein")) {	 		 	
		 		// no messages
	  			asserttrue("Action=store('" + this.tmlparam1 + "') - Form validated successfully. No messages.", category, "!tmlform.hasmessages()");
	 		}
	 	}
  </tml:action>
</head>
<body>
<HR/>
<PRE>
This test checks:
 - execution of validation during all storeIn... methods
 - correct setting of validationmessages
 - explizit execution of validation in action
</PRE>


	<tml:form id="executeValidation" source="none" 
	          mode="{this.mode}"
	          persist="{this.persist}">
	          
	        <tml:input type="text" name="toBeValidated"
	                   validationdivider="~" 
	        		   validation="$E_VALUE != ''~$E_VALUE.equals('Albert Einstein')"
	        		   message="toBeValidated is empty~toBeValidated should be 'Albert Einstein'"/>
	        
	        
	        <tml:input type="date" 
	        		   validation="$E_VALUE != ''"
	        		   message="start is empty"
	        		   name="start" format="dd.MM.yyyy"/>
	        <tml:input type="date" 
	        		   validation="$E_VALUE != ''"
	        		   message="end is empty"	        
		               name="end" format="dd.MM.yyyy"/>
	        <tml:validate condition="tmlform.parsedvalue('start').before(tmlform.parsedvalue('end'))"  ifnoerror="start,end" output="false">StartDate must be before EndDate.</tml:validate>
	        <tml:button clickaction="store" id="storeinportlet" param1="portlet">storeinportlet</tml:button><BR/>	        		   
	        <tml:button clickaction="store" id="storeincontent" param1="content">storeincontent</tml:button><BR/>	        		   
	        <tml:button clickaction="store" id="storeinprofile" param1="profile">storeinprofile</tml:button><BR/>	        		   	               
	        <tml:button clickaction="validate" id="validate">validate</tml:button>		
	</tml:form>
</body>
</html>