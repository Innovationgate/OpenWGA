<html>
<body>


<HR>
<PRE>
Testing user authentication against a content store:
- login via main user name
- correct retrieval of aliases, groups, roles, E-Mail address
- login via alias name
</PRE>

<tml:script>

try {
	if (isDefined("seq")) {
		seq++;
	}
	else {
		setSessionVar("seq", 1);
	}
	
	if (seq==2) {
		var userDetails = db().sessionContext.userDetails;
		assertEquals("Login via " + request.getParameter("login"), "Auth:cs", meta("db", "username"), "ow");
		assertEquals("Retrieval of email address", "Auth:cs", userDetails.getEMailAddress(), "cvsCheckout@innovationgate.de");
	
		
		var isAliases = metaList("db", "useraliases");
		var shouldAliases = createlist();
		shouldAliases.add("ow");
		shouldAliases.add("oweise");
		shouldAliases.add("Oliver Weise");
		sortList(isAliases);
		sortList(shouldAliases);
		assertEquals("Correct retrieval of aliases", "Auth:cs", isAliases, shouldAliases);
		
		var isGroups = metaList("db", "usergroups");
		var shouldGroups = createlist();
		shouldGroups.add("Admins");
		shouldGroups.add("All");
		shouldGroups.add("WrongCaseGroup");
		sortList(isGroups);
		sortList(shouldGroups);
		assertEquals("Correct retrieval of groups", "Auth:cs", isGroups, shouldGroups);
		
		var isRoles = metaList("db", "userroles");
		var shouldRoles = createlist();
		shouldRoles.add("master");
		sortList(isRoles);
		sortList(shouldRoles);
		assertEquals("Correct retrieval of roles", "Auth:cs", isRoles, shouldRoles);
		
		var isEMail = meta("db", "useremail");
		var shouldEMail = "cvsCheckout@innovationgate.de";
		assertEquals("Correct retrieval of E-Mail address", "Auth:cs", isEMail, shouldEMail);
	}
}
catch (e) {
	assertTrue("Error executing unit tests: " + e.message, "Auth:cs", false);
}

</tml:script>

<a name="loginLink" href="<tml:url type="login"/>">Login</a>

</body>
</html>