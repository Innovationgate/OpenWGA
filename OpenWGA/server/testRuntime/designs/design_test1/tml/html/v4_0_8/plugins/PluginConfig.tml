<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	Tests if csconfig.xml configurations find their way to a installed plugin
	</PRE>
	
	<hr>
	
	<tml:script>
		var cat = "PluginConfig";
		try {
			pdb = plugindb("de.innovationgate.testplugin");
			assertTrue("TestPlugin is installed", cat, "pdb != null");
			
			// ACL initialisations
			anon = pdb.getACL().getEntry("anonymous");
			assertTrue("Anonymous access level was set", cat, "anon != null");
			assertEquals("Anonymous access level was set to READER", cat, anon.level, 10);

			def = pdb.getACL().getEntry("*");
			assertTrue("Default access level was set", cat, "def != null");
			assertEquals("Default access level was set to EDITOR", cat, def.level, 30);
			
			role = pdb.getACL().getEntry("#arole");
			assertTrue("Role was set", cat, "role != null");
			
			// Scripts
			assertEquals("Init script ran", cat, pdb.getAttribute("InitScriptRan"), true);
			assertEquals("Connect script ran", cat, pdb.getAttribute("ConnectScriptRan"), true);
			
			// POptions
			assertEquals("Publisher option was set", cat, pdb.getAttribute("PublisherOption"), "Value");
			
			// Cannot test this. Plugin has no homepage if publishing is disabled
			// assertEquals("Home page was set", cat, pdb.getAttribute("HomePage"), "pluginhome");
			
			assertEquals("Personalisation mode was set", cat, parseInt(pdb.getAttribute("PersMode")), 1);
			assertEquals("AllowPublishing was set (to false)", cat, pdb.getAttribute("AllowPublishing"), "false");
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>