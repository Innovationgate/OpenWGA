<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	Testing automatically generated URL params (#00000290)
	</PRE>
	
	<hr>
	
	<tml:action id="theAction">
		log.info("Running action 'theAction'");
		setVar("actionMsg", "Action param was:" + actionParam);	
	</tml:action>
	
	<tml:foreach id="foreach" type="loop" count="50" pagesize="10">
	</tml:foreach>
	
	
	<tml:url var="simplecontent" context="name:home">
		<tml:param name="hooka" type="url">pooka</tml:param>
	</tml:url>
	
	<tml:url var="absolutecontent" context="name:home" absolute="true">
		<tml:param name="hooka" type="url">pooka</tml:param>
	</tml:url>
	
	<tml:url var="addingparam" type="selectpage" page="10" sourcetag="foreach">
		<tml:param name="hooka" type="url">pooka</tml:param>
	</tml:url>
	
	<a id="click1" href="<tml:url var="varparam" output="true"><tml:param name="thevar">thevalue</tml:param></tml:url>">TheLink1</a>
	
	<a id="click2" href="<tml:url>
							<tml:param name="typedparam" expression="createList(['a', 'b', 'c'])"/>			
						</tml:url>">TheLink2</a>
						
	<a id="click3" href="<tml:url action="theAction">
							<tml:param name="actionParam">TheActionParam</tml:param>
						</tml:url>">TheLink3</a>
						
	<a id="click4" href="<tml:url><tml:param name="urli" type="url">DasUrli</tml:param><tml:param name="varli">DasVarli</tml:param></tml:url>">TheLink4</a>
	
	<a id="click5" href="<tml:url keepparams="true"><tml:param name="nochnvarli">NochnVarli</tml:param></tml:url>">TheLink5</a>
	
	<tml:script>
		var builder = WGA.urlBuilder();
		builder.setVarParameter("boesesvarli", "boeserwert");
		click6url = builder.rebuild();
		click7url = WGA.Utils.strReplace(click6url, "/test1/", "/test1_v5/", true);	
	</tml:script>
	
	<a id="click6" href="<tml:item name="click6url"/>">TheLink6</a>
	<a id="click7" href="<tml:item name="click7url"/>">TheLink7</a>
	
	<a id="click8" href="<tml:url v_vdynhooka="vdynpooka"/>">TheLink8</a>
	<a id="click9" href="<tml:url u_udynhooka="udynpooka"/>">TheLink9</a>
	
	<a id="click10" href="<tml:meta type="request" name="wgaurl"/>/test1/html/v5_3:webtml:urlparams.de.html?%24vars=1PD6dRoPk5PG8aPbL0V3AhWaHJxOTHlB4D5kUf52Lb4FfvWJ2uO9jjUH-PsViTEAcWYxRe4Yl-57-MLxPC5nxvALhqw18QGXY9fKtWufPbtrTkZM0MAsCGdZEMDONyKELi891GuW0HaZFOhLSY711QlYoNnGPjZIX1i2rFC0P87LHD4XEj5KtqnpN9DkooyJTEHygbKyYnZJMb_9JfCMHnw1J6yNM6OCtf9vcqNTVoY3OB1ju0gZGREKCVm0KZPHIAEI0y7Gsh7PKQKS9O22wJuqUWQZj18yY2iXc5Ife5cMCittPY6LxyV69C8ZxPuNKt5TLZbgfVKOVqeqAnRJoroA8r4g7lnTuAgj5BuIh8-_TQ1oiRATr_xe194p1eyXkdMOFy4pndwWiJkhq7SmmGTrDRZoASE4Ir0c1MsEP2qCKJ4v0hWKnHEhsmNTBwdPwqK4r4l9G6lYf5P0Mcbegg%3D%3D">TheLink10 DES-Encrypted</a>
	
	<tml:script>
		var cat = "WebTML:URLParams";
		
		// Prepare sequence variable to be able to determine the request sequence number
		if (isdefined("seq")) {
			seq++;
		}
		else {
			setSessionVar("seq", 1);
		}
		
		try {
			if (seq == 1) {
				assertEquals("Adding URL params: To simple content URL", cat, simplecontent, meta("request", "wgaurl") + "/test1/html/default/home.de.html?hooka=pooka");
				assertEquals("Adding URL params: To absolute content URL", cat, absolutecontent, meta("request", "absolutewgaurl") + "/test1/html/default/home.de.html?hooka=pooka");
				assertEquals("Adding URL params: To URL already containing an URL parameter", cat, addingparam, layouturl("html", tag.getTMLModuleName()) + "?hooka=pooka&foreachPage=10");
			}
			else if (seq == 2) {
				assertEquals("Adding URL params: Var param was set", cat, thevar, "thevalue");
			}
			else if (seq == 3) {
				assertEquals("Adding URL params: Complex var parameter correctly decrypted", cat, typedparam, createList(['a', 'b', 'c']));
			}
			else if (seq == 4) {
				assertEquals("Adding URL params: Using var params in WebTML actions", cat, actionMsg, "Action param was:TheActionParam");
			}
			else if (seq == 6) {
				assertEquals("Adding URL params: keepparams=true kept URL param from previous request", cat, request.getParameter("urli"), "DasUrli");
				assertEquals("Adding URL params: keepparams=true kept var param from previous request", cat, varli, "DasVarli");
				assertEquals("Adding URL params: keepparams=true merged current param to kept params", cat, nochnvarli, "NochnVarli");
			}
			else if (seq == 7) {
			assertEquals("Adding URL params: Calling var params with a slightly different URL must invalidate URL params. Test to see that URL var param works normally.", cat, boesesvarli, "boeserwert");
			}
			else if (seq == 8) {
				assertEquals("Adding URL params: Calling var params with a slightly different URL must invalidate URL params. Test with modified URL.", cat, boesesvarli, null);
			}
			else if (seq == 9) {
				assertEquals("Adding URL params: Var param frm dynamic attribute was set", cat, vdynhooka, "vdynpooka");
			}
			else if (seq == 10) {
				assertEquals("Adding URL params: URL param frm dynamic attribute was set", cat, request.getParameter("udynhooka"), "udynpooka");
			}
			else if (seq == 11) {
				// Note: This will only work on the unittest server itself as the var param was created for the URL containing "WGAPublisher" context path.
				assertEquals("Adding URL params: DES-encrypted var param still readable", cat, thevar, "thevalue");
			}
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>