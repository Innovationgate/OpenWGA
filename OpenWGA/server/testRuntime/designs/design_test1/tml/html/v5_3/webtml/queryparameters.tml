<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	Testing the usage of query parameters
	</PRE>
	
	<tml:range context="name:home">
	
		<tml:query id="defParamContent" includecurrent="true">
			content = :content
		</tml:query>
		
		<tml:query id="defParamKey" includecurrent="true">
			concat(content.structentry.key, '.', content.language.name, '.', content.version) = :key
		</tml:query>
		
		<tml:query id="defParamLangStructKey" includecurrent="true" alllanguages="true">
			content.structentry.key = :structkey AND content.language.name = :language
		</tml:query>
		
		<tml:query id="internalParam" includecurrent="true">
			<tml:param name="thecon" expression="content()"/>
			content = :thecon
		</tml:query>
		
		<tml:collection>
			<tml:param name="thecon2" expression="content()"/>
			<tml:query id="externalParam" includecurrent="true">
				content = :thecon2
			</tml:query>
		</tml:collection>
	
	</tml:range>
	
	<hr>
	
	<tml:script>
		var cat = "WEbTML:QueryParameters";
		
		// Prepare sequence variable to be able to determine the request sequence number
		if (isdefined("seq")) {
			seq++;
		}
		else {
			setSessionVar("seq", 1);
		}
		
		try {
			assertEquals("Default query parameter :content", cat, context("query:defParamContent").UNIQUENAME, 'home');
			assertEquals("Default query parameter :key", cat, context("query:defParamKey").UNIQUENAME, 'home');
			assertEquals("Default query parameter :language", cat, context("query:defParamLangStructKey").UNIQUENAME, 'home');
			assertEquals("Internal query parameter", cat, context("query:internalParam").UNIQUENAME, 'home');
			assertEquals("External query parameter", cat, context("query:externalParam").UNIQUENAME, 'home');		
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>