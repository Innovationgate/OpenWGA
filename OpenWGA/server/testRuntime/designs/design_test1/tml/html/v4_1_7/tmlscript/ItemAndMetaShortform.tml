<html>

<head><tml:htmlhead/></head>

<body>
	<PRE>
	The scope reorganisation in B00005932 took some impact on TMLScript behaviour, temporarily breaking
	retrieval and setting of items and metadatas via short form
	This test should assure that all valid forms are still supported, and additionally that basic JavaScript objects are still retrievable "behind" them
	</PRE>
	
	<hr>
	
	<tml:item context="name:home" name="body" var="theBody"/>
	<tml:meta context="name:home" name="title" var="theTitle"/>
	
	<tml:script context="name:home">
		var cat = "TMLScript:ShortForms";
		
		// Prepare sequence variable to be able to determine the request sequence number
		if (isdefined("seq")) {
			seq++;
		}
		else {
			setSessionVar("seq", 1);
		}
		
		try {
			
			// Root scope
			assertEquals("Item retrieval on root scope, qualified by this", cat, this.body, item("theBody"));
			assertEquals("Item retrieval on root scope, unqualified", cat, body, item("theBody"));
			assertEquals("Meta retrieval on root scope, qualified by this", cat, this.TITLE, item("theTitle"));
			assertEquals("Meta retrieval on root scope, unqualified", cat, TITLE, item("theTitle"));
			
			assertEquals("Inexistent Item retrieval on root scope, qualified by this", cat, this.schmody, null);
			assertEquals("Inexistent Item retrieval on root scope, unqualified", cat, schmody, null);
			assertEquals("Inexistent Meta retrieval on root scope, qualified by this", cat, this.TUTLE, "");
			assertEquals("Inexistent Meta retrieval on root scope, unqualified", cat, TUTLE, "");
			
			
			this.theItemSet1 = "isset";
			assertEquals("Item setting on root scope, qualified by this", cat, item("theItemSet1"), "isset");
			
			theItemSet2 = "isset";
			assertEquals("Item setting on root scope, qualified by this", cat, item("theItemSet2"), "isset");
	
			// Derived context		
			var cx = context("name:home");
			assertEquals("Item retrieval on derived context", cat, cx.body, item("theBody"));
			assertEquals("Meta retrieval on derived context", cat, cx.TITLE, item("theTitle"));
			assertEquals("Inexistent Item retrieval on derived context", cat, cx.schmody, null);
			assertEquals("Inexistent Meta retrieval on derived context", cat, cx.TUTLE, "");
			
			// JavaScript global Objects and Functions
			num1 = new Number(123);
			assertTrue("Access to global JavaScript objects - new Number()", cat, "num1 == 123");
			var num2 = Number(123);
			assertEquals("Access to global JavaScript objects - Number()", cat, num2, 123);
			var anint1 = parseInt("123");
			assertEquals("Access to global JavaScript functions - parseInt()", cat, anint1, 123);
			
			// WGA global functions
			assertEquals("Access to global WGA functions - localDB()", cat, localDB(), this.db());
					
		}
		catch (e) {
			logException(e);
			assertTrue("Exception running tests", cat, "false");
		}
	</tml:script>
	
	<tml:warnings/>
</body>
</html>