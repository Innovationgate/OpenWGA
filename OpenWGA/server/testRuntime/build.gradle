apply plugin: 'java'

sourceSets {
    testlib {
        output.resourcesDir = 'plugins/unittests/java'
        output.classesDir   = 'plugins/unittests/java'
    }
}

dependencies {
    compile project(":wga");
    compile project(":tmlScript");
    compile project(":wgaBuildTools")
    compile project(":servicesClient")
    compile project(":servicesClient:xfireClientFactory")
    
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    compile 'javax.websocket:javax.websocket-api:1.1'
    compile 'javax.servlet.jsp:jsp-api:2.2'
    compile 'javax.mail:javax.mail-api:1.4.7'
    compile 'org.glassfish.jersey.core:jersey-client:2.19'
    compile 'net.sourceforge.htmlunit:htmlunit:2.21'
    compile 'org.apache.ant:ant:1.9.7'
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.19'
    compile 'org.glassfish.jersey.media:jersey-media-json-processing:2.19'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.19'
    compile 'com.sun.mail:javax.mail:1.4.7'
    
}

task executeCurrentTest(dependsOn: jar) << {
    
    ClassLoader antClassLoader = org.apache.tools.ant.Project.class.classLoader
    configurations.runtime.each { File f ->
        antClassLoader.addURL(f.toURI().toURL())
    }
    antClassLoader.addURL(jar.archivePath.toURI().toURL())
    
    ant.importBuild 'test.xml'
    
    ant.properties['wgaunit.context'] = '#NONE#'
    ant.properties['wgaunit.port'] = '8080'
    currentTest.execute()
    
}

task executeTests(dependsOn: jar) << {
    
    ClassLoader antClassLoader = org.apache.tools.ant.Project.class.classLoader
    configurations.runtime.each { File f ->
        antClassLoader.addURL(f.toURI().toURL())
    }
    antClassLoader.addURL(jar.archivePath.toURI().toURL())
    
    ant.importBuild 'test.xml'
    
    ant.properties['wgaunit.context'] = '#NONE#'
    ant.properties['wgaunit.port'] = '8080'
    executeAllTests.execute()
    
}