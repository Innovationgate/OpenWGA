buildscript {
    repositories {
      jcenter()
    }
  
    dependencies {
      classpath 'org.akhikhl.gretty:gretty:+'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'maven-publish'
apply plugin: 'org.akhikhl.gretty'

compileJava.options.encoding = 'ISO-8859-1'

def testProject = project(":server:testRuntime")

gretty {
    servletContainer='tomcat7'
    logDir='build'
    jvmArgs = ['-XX:MaxPermSize=256m',
               '-Dde.innovationgate.wga.configpath=${testProject.file("wga")}',
               '-Dde.innovationgate.wga.defaultplugins=${testProject.file("wga/external-default-plugins")}',
               '-Dde.innovationgate.wga.unittest=true',
               '-Dde.innovationgate.wga.unittest.logdir=${testProject.file("wga/test")}',
               '-Dhibernate.jdbc.use_streams_for_binary=true',
               '-Dde.innovationgate.wga.devplugins=${testProject.file("plugins")}'
    ];
}


compileJava.options.encoding = 'ISO-8859-1'
ant.basedir=project.rootDir

dependencies {
    compile project(":wga");
    compile project(":tmlScript");
    
    compileClasspath project(":wgaBuildTools");
    
    gretty 'com.sun.mail:javax.mail:1.4.7'
    gretty 'javax.activation:activation:1.1.1'
    gretty 'org.apache.geronimo.specs:geronimo-activation_1.1_spec:1.1'
    gretty 'org.apache.geronimo.specs:geronimo-jta_1.1_spec:1.1.1'
    gretty 'org.glassfish.main.transaction:javax.transaction:3.1.2.2'

    
}


task writeVersion << {
    ant.taskdef(name:"writeVersion", classname:"de.innovationgate.ant.WriteVersionTask", classpath: configurations.compileClasspath.asPath)
    ant.writeVersion(target:"server/build/tmp/wgabuild.properties", version: rootProject.version)
    println "Wrote OpenWGA Version: ${rootProject.version}"
}

compileJava.doLast {
    tasks.writeVersion.execute()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.web
        }
    }
}

war {
    war.archiveName = "openwga-ce.war"
    from('build/tmp') {
        include 'wgabuild.properties' into('WEB-INF')
    }
}

